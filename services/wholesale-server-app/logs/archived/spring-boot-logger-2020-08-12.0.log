2020-08-11 09:51:46,507 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 09:51:49,812 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=b0f28b056d981649a5a48d8f610ab083d4aa5bcd, state=null
2020-08-11 09:51:49,813 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 09:51:49,819 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 09:51:50,479 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 09:51:50,481 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 09:51:50,531 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 09:51:50,673 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 185ms. Found 5 JPA repository interfaces.
2020-08-11 09:51:50,694 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 09:51:50,694 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 09:51:50,712 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:51:50,712 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:51:50,713 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:51:50,713 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:51:50,713 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:51:50,725 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 30ms. Found 1 MongoDB repository interfaces.
2020-08-11 09:51:51,008 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 09:51:51,275 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@19b5214b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:51:51,285 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:51:51,554 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 09:51:51,563 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 09:51:51,563 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 09:51:51,563 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 09:51:51,698 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 09:51:51,698 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1867 ms
2020-08-11 09:51:51,854 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 09:51:51,921 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 09:51:52,293 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 09:51:52,764 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 09:51:53,920 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 09:51:54,022 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 09:51:54,024 ERROR org.springframework.boot.web.embedded.tomcat.TomcatStarter [main] Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through method 'setContentNegotationStrategy' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: Invocation of init method failed; nested exception is liquibase.exception.ValidationFailedException: Validation Failed:
     2 change sets check sum
          db/changelog/version/createTables.xml::1::artur was: 8:f3d5bb622997ef8d2ecafdca5f9466b3 but is now: 8:8cba65b36580430cdac95e7a4dfb3f1e
          db/changelog/version/createTables.xml::5::artur was: 8:dc73ea65afce61087710f5031e9ef179 but is now: 8:bc44177a37471f69984ab0a3baa6e462

2020-08-11 09:51:54,041 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-08-11 09:51:54,043 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 09:51:54,044 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 09:51:54,044 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-08-11 09:51:54,045 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2020-08-11 09:51:54,057 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2020-08-11 09:51:54,063 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-11 09:51:54,066 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at pl.com.ttsw.intership.wholesaleserverapp.WholesaleServerAppApplication.main(WholesaleServerAppApplication.java:21)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	... 9 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through method 'setContentNegotationStrategy' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: Invocation of init method failed; nested exception is liquibase.exception.ValidationFailedException: Validation Failed:
     2 change sets check sum
          db/changelog/version/createTables.xml::1::artur was: 8:f3d5bb622997ef8d2ecafdca5f9466b3 but is now: 8:8cba65b36580430cdac95e7a4dfb3f1e
          db/changelog/version/createTables.xml::5::artur was: 8:dc73ea65afce61087710f5031e9ef179 but is now: 8:bc44177a37471f69984ab0a3baa6e462

	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:723)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5128)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:421)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:468)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 14 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: Invocation of init method failed; nested exception is liquibase.exception.ValidationFailedException: Validation Failed:
     2 change sets check sum
          db/changelog/version/createTables.xml::1::artur was: 8:f3d5bb622997ef8d2ecafdca5f9466b3 but is now: 8:8cba65b36580430cdac95e7a4dfb3f1e
          db/changelog/version/createTables.xml::5::artur was: 8:dc73ea65afce61087710f5031e9ef179 but is now: 8:bc44177a37471f69984ab0a3baa6e462

	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:723)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:715)
	... 64 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: Invocation of init method failed; nested exception is liquibase.exception.ValidationFailedException: Validation Failed:
     2 change sets check sum
          db/changelog/version/createTables.xml::1::artur was: 8:f3d5bb622997ef8d2ecafdca5f9466b3 but is now: 8:8cba65b36580430cdac95e7a4dfb3f1e
          db/changelog/version/createTables.xml::5::artur was: 8:dc73ea65afce61087710f5031e9ef179 but is now: 8:bc44177a37471f69984ab0a3baa6e462

	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1522)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1486)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1262)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:715)
	... 86 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: Invocation of init method failed; nested exception is liquibase.exception.ValidationFailedException: Validation Failed:
     2 change sets check sum
          db/changelog/version/createTables.xml::1::artur was: 8:f3d5bb622997ef8d2ecafdca5f9466b3 but is now: 8:8cba65b36580430cdac95e7a4dfb3f1e
          db/changelog/version/createTables.xml::5::artur was: 8:dc73ea65afce61087710f5031e9ef179 but is now: 8:bc44177a37471f69984ab0a3baa6e462

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 102 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: Invocation of init method failed; nested exception is liquibase.exception.ValidationFailedException: Validation Failed:
     2 change sets check sum
          db/changelog/version/createTables.xml::1::artur was: 8:f3d5bb622997ef8d2ecafdca5f9466b3 but is now: 8:8cba65b36580430cdac95e7a4dfb3f1e
          db/changelog/version/createTables.xml::5::artur was: 8:dc73ea65afce61087710f5031e9ef179 but is now: 8:bc44177a37471f69984ab0a3baa6e462

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:227)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1172)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:420)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:350)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.findEntityManagerFactory(EntityManagerFactoryUtils.java:121)
	at org.springframework.orm.jpa.EntityManagerFactoryAccessor.setBeanFactory(EntityManagerFactoryAccessor.java:155)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1818)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1783)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 112 common frames omitted
Caused by: liquibase.exception.ValidationFailedException: Validation Failed:
     2 change sets check sum
          db/changelog/version/createTables.xml::1::artur was: 8:f3d5bb622997ef8d2ecafdca5f9466b3 but is now: 8:8cba65b36580430cdac95e7a4dfb3f1e
          db/changelog/version/createTables.xml::5::artur was: 8:dc73ea65afce61087710f5031e9ef179 but is now: 8:bc44177a37471f69984ab0a3baa6e462

	at liquibase.changelog.DatabaseChangeLog.validate(DatabaseChangeLog.java:289)
	at liquibase.Liquibase$1.run(Liquibase.java:202)
	at liquibase.Scope.lambda$child$0(Scope.java:159)
	at liquibase.Scope.child(Scope.java:170)
	at liquibase.Scope.child(Scope.java:158)
	at liquibase.Scope.child(Scope.java:137)
	at liquibase.Liquibase.runInScope(Liquibase.java:1790)
	at liquibase.Liquibase.update(Liquibase.java:183)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:322)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:270)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	... 129 common frames omitted
2020-08-11 09:54:55,324 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 09:54:56,524 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=b0f28b056d981649a5a48d8f610ab083d4aa5bcd, state=null
2020-08-11 09:54:56,525 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 09:54:56,530 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 09:54:57,198 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 09:54:57,200 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 09:54:57,252 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 09:54:57,387 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 180ms. Found 5 JPA repository interfaces.
2020-08-11 09:54:57,408 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 09:54:57,409 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 09:54:57,426 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:54:57,427 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:54:57,427 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:54:57,427 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:54:57,428 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:54:57,440 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 31ms. Found 1 MongoDB repository interfaces.
2020-08-11 09:54:57,701 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 09:54:57,940 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@238291d4' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:54:57,950 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:54:58,223 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 09:54:58,232 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 09:54:58,233 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 09:54:58,233 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 09:54:58,370 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 09:54:58,371 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1827 ms
2020-08-11 09:54:58,520 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 09:54:58,589 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 09:54:58,937 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 09:54:59,381 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 09:55:00,479 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 09:55:00,560 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 09:55:00,565 ERROR org.springframework.boot.web.embedded.tomcat.TomcatStarter [main] Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through method 'setContentNegotationStrategy' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: Invocation of init method failed; nested exception is liquibase.exception.ValidationFailedException: Validation Failed:
     2 change sets check sum
          db/changelog/version/createTables.xml::1::artur was: 8:f3d5bb622997ef8d2ecafdca5f9466b3 but is now: 8:8cba65b36580430cdac95e7a4dfb3f1e
          db/changelog/version/createTables.xml::5::artur was: 8:dc73ea65afce61087710f5031e9ef179 but is now: 8:bc44177a37471f69984ab0a3baa6e462

2020-08-11 09:55:00,604 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-08-11 09:55:00,606 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 09:55:00,607 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 09:55:00,608 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-08-11 09:55:00,609 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2020-08-11 09:55:00,621 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2020-08-11 09:55:00,627 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-11 09:55:00,631 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at pl.com.ttsw.intership.wholesaleserverapp.WholesaleServerAppApplication.main(WholesaleServerAppApplication.java:21)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	... 9 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through method 'setContentNegotationStrategy' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: Invocation of init method failed; nested exception is liquibase.exception.ValidationFailedException: Validation Failed:
     2 change sets check sum
          db/changelog/version/createTables.xml::1::artur was: 8:f3d5bb622997ef8d2ecafdca5f9466b3 but is now: 8:8cba65b36580430cdac95e7a4dfb3f1e
          db/changelog/version/createTables.xml::5::artur was: 8:dc73ea65afce61087710f5031e9ef179 but is now: 8:bc44177a37471f69984ab0a3baa6e462

	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:723)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5128)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:421)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:468)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 14 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: Invocation of init method failed; nested exception is liquibase.exception.ValidationFailedException: Validation Failed:
     2 change sets check sum
          db/changelog/version/createTables.xml::1::artur was: 8:f3d5bb622997ef8d2ecafdca5f9466b3 but is now: 8:8cba65b36580430cdac95e7a4dfb3f1e
          db/changelog/version/createTables.xml::5::artur was: 8:dc73ea65afce61087710f5031e9ef179 but is now: 8:bc44177a37471f69984ab0a3baa6e462

	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:723)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:715)
	... 64 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: Invocation of init method failed; nested exception is liquibase.exception.ValidationFailedException: Validation Failed:
     2 change sets check sum
          db/changelog/version/createTables.xml::1::artur was: 8:f3d5bb622997ef8d2ecafdca5f9466b3 but is now: 8:8cba65b36580430cdac95e7a4dfb3f1e
          db/changelog/version/createTables.xml::5::artur was: 8:dc73ea65afce61087710f5031e9ef179 but is now: 8:bc44177a37471f69984ab0a3baa6e462

	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1522)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1486)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1262)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:715)
	... 86 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: Invocation of init method failed; nested exception is liquibase.exception.ValidationFailedException: Validation Failed:
     2 change sets check sum
          db/changelog/version/createTables.xml::1::artur was: 8:f3d5bb622997ef8d2ecafdca5f9466b3 but is now: 8:8cba65b36580430cdac95e7a4dfb3f1e
          db/changelog/version/createTables.xml::5::artur was: 8:dc73ea65afce61087710f5031e9ef179 but is now: 8:bc44177a37471f69984ab0a3baa6e462

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 102 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: Invocation of init method failed; nested exception is liquibase.exception.ValidationFailedException: Validation Failed:
     2 change sets check sum
          db/changelog/version/createTables.xml::1::artur was: 8:f3d5bb622997ef8d2ecafdca5f9466b3 but is now: 8:8cba65b36580430cdac95e7a4dfb3f1e
          db/changelog/version/createTables.xml::5::artur was: 8:dc73ea65afce61087710f5031e9ef179 but is now: 8:bc44177a37471f69984ab0a3baa6e462

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:227)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1172)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:420)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:350)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.findEntityManagerFactory(EntityManagerFactoryUtils.java:121)
	at org.springframework.orm.jpa.EntityManagerFactoryAccessor.setBeanFactory(EntityManagerFactoryAccessor.java:155)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1818)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1783)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 112 common frames omitted
Caused by: liquibase.exception.ValidationFailedException: Validation Failed:
     2 change sets check sum
          db/changelog/version/createTables.xml::1::artur was: 8:f3d5bb622997ef8d2ecafdca5f9466b3 but is now: 8:8cba65b36580430cdac95e7a4dfb3f1e
          db/changelog/version/createTables.xml::5::artur was: 8:dc73ea65afce61087710f5031e9ef179 but is now: 8:bc44177a37471f69984ab0a3baa6e462

	at liquibase.changelog.DatabaseChangeLog.validate(DatabaseChangeLog.java:289)
	at liquibase.Liquibase$1.run(Liquibase.java:202)
	at liquibase.Scope.lambda$child$0(Scope.java:159)
	at liquibase.Scope.child(Scope.java:170)
	at liquibase.Scope.child(Scope.java:158)
	at liquibase.Scope.child(Scope.java:137)
	at liquibase.Liquibase.runInScope(Liquibase.java:1790)
	at liquibase.Liquibase.update(Liquibase.java:183)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:322)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:270)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	... 129 common frames omitted
2020-08-11 09:56:39,541 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 09:56:40,673 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=b0f28b056d981649a5a48d8f610ab083d4aa5bcd, state=null
2020-08-11 09:56:40,674 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 09:56:40,679 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 09:56:41,381 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 09:56:41,383 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 09:56:41,439 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 09:56:41,581 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 190ms. Found 5 JPA repository interfaces.
2020-08-11 09:56:41,604 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 09:56:41,604 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 09:56:41,621 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:56:41,621 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:56:41,622 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:56:41,622 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:56:41,623 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:56:41,635 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 30ms. Found 1 MongoDB repository interfaces.
2020-08-11 09:56:41,893 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 09:56:42,126 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@28d739f1' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:56:42,135 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:56:42,393 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 09:56:42,402 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 09:56:42,403 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 09:56:42,403 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 09:56:42,552 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 09:56:42,552 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1861 ms
2020-08-11 09:56:42,708 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 09:56:42,773 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 09:56:43,089 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 09:56:43,596 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 09:56:44,537 INFO liquibase.logging.core.JavaLogger [main] Creating database history table with name: wholesale.databasechangelog
2020-08-11 09:56:44,580 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 09:56:44,681 INFO liquibase.logging.core.JavaLogger [main] Table users created
2020-08-11 09:56:44,695 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::1::artur ran successfully in 32ms
2020-08-11 09:56:44,757 INFO liquibase.logging.core.JavaLogger [main] Table roles created
2020-08-11 09:56:44,772 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::2::artur ran successfully in 32ms
2020-08-11 09:56:44,819 INFO liquibase.logging.core.JavaLogger [main] Table users_roles created
2020-08-11 09:56:44,834 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::3::artur ran successfully in 31ms
2020-08-11 09:56:44,881 INFO liquibase.logging.core.JavaLogger [main] Table basket_items created
2020-08-11 09:56:44,895 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::4::artur ran successfully in 32ms
2020-08-11 09:56:44,941 INFO liquibase.logging.core.JavaLogger [main] Table orders created
2020-08-11 09:56:44,954 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::5::artur ran successfully in 31ms
2020-08-11 09:56:44,999 INFO liquibase.logging.core.JavaLogger [main] Table warehouses created
2020-08-11 09:56:45,013 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::6::artur ran successfully in 31ms
2020-08-11 09:56:45,056 INFO liquibase.logging.core.JavaLogger [main] Table invoicepdf created
2020-08-11 09:56:45,072 INFO liquibase.logging.core.JavaLogger [main] Table orderpdf created
2020-08-11 09:56:45,087 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::7::marcin ran successfully in 46ms
2020-08-11 09:56:45,129 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to users_roles (role_id)
2020-08-11 09:56:45,143 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::7::artur ran successfully in 29ms
2020-08-11 09:56:45,184 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to users_roles (user_id)
2020-08-11 09:56:45,198 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::8::artur ran successfully in 28ms
2020-08-11 09:56:45,241 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to orders (warehouse_id)
2020-08-11 09:56:45,255 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::9::artur ran successfully in 28ms
2020-08-11 09:56:45,296 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to basket_items (order_id)
2020-08-11 09:56:45,310 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::10::artur ran successfully in 28ms
2020-08-11 09:56:45,352 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to orders (user_id)
2020-08-11 09:56:45,366 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::11::artur ran successfully in 28ms
2020-08-11 09:56:45,411 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to warehouses (user_id)
2020-08-11 09:56:45,426 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::12::artur ran successfully in 30ms
2020-08-11 09:56:45,486 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 09:56:45,539 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 09:56:45,548 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 09:56:45,603 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 09:56:45,669 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 09:56:45,674 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 09:56:45,846 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 09:56:45,856 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 09:56:45,944 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 09:56:45,989 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 09:56:46,033 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 09:56:46,165 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'createAfterAppStart': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'app.sadmin.email' in value "${app.sadmin.email}"
2020-08-11 09:56:46,168 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 09:56:46,904 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 09:56:46,911 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 09:56:46,913 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'taskScheduler'
2020-08-11 09:56:46,914 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-11 09:56:46,914 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2020-08-11 09:56:46,926 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2020-08-11 09:56:46,927 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-08-11 09:56:46,935 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-11 09:56:46,938 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'createAfterAppStart': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'app.sadmin.email' in value "${app.sadmin.email}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at pl.com.ttsw.intership.wholesaleserverapp.WholesaleServerAppApplication.main(WholesaleServerAppApplication.java:21)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'app.sadmin.email' in value "${app.sadmin.email}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:178)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:124)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:175)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:912)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1245)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	... 18 common frames omitted
2020-08-11 09:58:24,256 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 09:58:25,609 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 09:58:25,610 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 09:58:25,614 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 09:58:26,251 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 09:58:26,254 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 09:58:26,306 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 09:58:26,442 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 181ms. Found 5 JPA repository interfaces.
2020-08-11 09:58:26,465 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 09:58:26,465 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 09:58:26,482 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:58:26,483 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:58:26,484 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:58:26,484 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:58:26,484 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:58:26,496 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 30ms. Found 1 MongoDB repository interfaces.
2020-08-11 09:58:26,762 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 09:58:27,007 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@b022551' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:58:27,016 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:58:27,287 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 09:58:27,295 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 09:58:27,296 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 09:58:27,296 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 09:58:27,422 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 09:58:27,422 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1796 ms
2020-08-11 09:58:27,576 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 09:58:27,642 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 09:58:27,952 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 09:58:28,366 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 09:58:29,522 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 09:58:29,617 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 09:58:29,660 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 09:58:29,670 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 09:58:29,718 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 09:58:29,771 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 09:58:29,777 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 09:58:29,903 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 09:58:29,935 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 09:58:30,012 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 09:58:30,026 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 09:58:30,113 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 09:58:30,989 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@28b47211, org.springframework.security.web.context.SecurityContextPersistenceFilter@6e4bccc, org.springframework.security.web.header.HeaderWriterFilter@7b44e98e, org.springframework.web.filter.CorsFilter@4abb4041, org.springframework.security.web.authentication.logout.LogoutFilter@115924ba, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@416c1b0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3d2ff73a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2caa9666, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@247415be, org.springframework.security.web.session.SessionManagementFilter@2d568cff, org.springframework.security.web.access.ExceptionTranslationFilter@106b476a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6b7e4db6]
2020-08-11 09:58:31,013 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 09:58:31,013 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 09:58:31,020 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 09:58:31,020 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 09:58:31,108 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 09:58:31,117 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 09:58:31,488 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 09:58:31,547 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 09:58:31,610 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 09:58:31,690 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 09:58:31,690 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 09:58:31,812 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 09:58:31,812 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 09:58:31,952 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 09:58:31,981 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f324fa55669f64aa0ae3f53', description='null'}-localhost:27017] Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.waitForConnect(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
	at java.base/java.net.Socket.connect(Socket.java:609)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-08-11 09:58:32,009 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 09:58:32,010 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 09:58:32,010 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 09:58:32,010 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 09:58:32,010 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 09:58:32,010 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 09:58:32,011 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 09:58:32,124 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 09:58:32,126 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 09:58:32,128 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 09:58:32,131 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597132712130 with initial instances count: 1
2020-08-11 09:58:32,134 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 09:58:32,135 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597132712135, current=UP, previous=STARTING]
2020-08-11 09:58:32,136 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 09:58:32,137 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 09:58:32,165 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 09:58:32,166 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 09:58:32,169 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 09:58:32,211 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 09:58:32,607 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 09:58:32,616 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.266 seconds (JVM running for 9.744)
2020-08-11 09:58:32,770 INFO pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart [main] user ROLE ADDED
2020-08-11 09:58:32,798 INFO pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart [main] ADMIN ROLE ADDED
2020-08-11 09:58:32,987 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:319)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:255)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:178)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy204.save(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createSuperAdminAfterStartup(CreateAfterAppStart.java:89)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:305)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:190)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:153)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.boot.context.event.EventPublishingRunListener.running(EventPublishingRunListener.java:108)
	at org.springframework.boot.SpringApplicationRunListeners.running(SpringApplicationRunListeners.java:77)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at pl.com.ttsw.intership.wholesaleserverapp.WholesaleServerAppApplication.main(WholesaleServerAppApplication.java:21)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:120)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:113)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:742)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:710)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:525)
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:456)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:419)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:459)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:293)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:718)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:704)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:314)
	at com.sun.proxy.$Proxy197.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 33 common frames omitted
2020-08-11 09:58:32,989 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Unregistering application REST-SERVICE with eureka with status DOWN
2020-08-11 09:58:32,990 WARN com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597132712990, current=DOWN, previous=UP]
2020-08-11 09:58:32,990 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 09:58:32,994 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8082"]
2020-08-11 09:58:32,998 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 09:58:33,043 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-08-11 09:58:33,045 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 09:58:33,046 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 09:58:33,047 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 09:58:33,047 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 09:58:33,048 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8082"]
2020-08-11 09:58:33,051 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8082"]
2020-08-11 09:58:33,061 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 09:58:33,063 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'taskScheduler'
2020-08-11 09:58:33,063 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-11 09:58:33,064 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2020-08-11 09:58:33,076 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2020-08-11 09:58:33,077 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2020-08-11 09:58:36,081 INFO com.netflix.discovery.DiscoveryClient [main] Unregistering ...
2020-08-11 09:58:36,087 INFO com.netflix.discovery.DiscoveryClient [main] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - deregister  status: 200
2020-08-11 09:58:36,096 INFO com.netflix.discovery.DiscoveryClient [main] Completed shut down of DiscoveryClient
2020-08-11 09:59:31,325 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 09:59:32,572 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 09:59:32,573 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 09:59:32,579 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 09:59:33,220 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 09:59:33,222 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 09:59:33,274 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 09:59:33,412 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 182ms. Found 5 JPA repository interfaces.
2020-08-11 09:59:33,433 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 09:59:33,434 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 09:59:33,451 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:59:33,452 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:59:33,453 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:59:33,453 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:59:33,454 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 09:59:33,467 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 32ms. Found 1 MongoDB repository interfaces.
2020-08-11 09:59:33,726 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 09:59:33,966 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@44dfdd58' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:59:33,976 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:59:34,242 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 09:59:34,251 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 09:59:34,252 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 09:59:34,252 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 09:59:34,387 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 09:59:34,388 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1795 ms
2020-08-11 09:59:34,534 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 09:59:34,599 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 09:59:34,905 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 09:59:35,312 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 09:59:36,576 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 09:59:36,679 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 09:59:36,725 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 09:59:36,734 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 09:59:36,782 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 09:59:36,835 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 09:59:36,848 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 09:59:36,969 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 09:59:37,005 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 09:59:37,084 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 09:59:37,098 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 09:59:37,194 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 09:59:38,076 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@714d7c7b, org.springframework.security.web.context.SecurityContextPersistenceFilter@6413eeb7, org.springframework.security.web.header.HeaderWriterFilter@13e6c544, org.springframework.web.filter.CorsFilter@72ad577b, org.springframework.security.web.authentication.logout.LogoutFilter@7077ae9c, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@7bd1098, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@712213ed, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@61c4fc34, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@99948fe, org.springframework.security.web.session.SessionManagementFilter@744199bb, org.springframework.security.web.access.ExceptionTranslationFilter@34a99d8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6fc1a1d5]
2020-08-11 09:59:38,097 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 09:59:38,098 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 09:59:38,104 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 09:59:38,104 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 09:59:38,163 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 09:59:38,171 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 09:59:38,562 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 09:59:38,620 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 09:59:38,686 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 09:59:38,767 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 09:59:38,767 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 09:59:38,899 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 09:59:38,899 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 09:59:39,055 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 09:59:39,059 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f324fe9a6aa991f1077e312', description='null'}-localhost:27017] Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.waitForConnect(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
	at java.base/java.net.Socket.connect(Socket.java:609)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-08-11 09:59:39,100 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 09:59:39,100 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 09:59:39,100 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 09:59:39,100 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 09:59:39,100 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 09:59:39,100 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 09:59:39,100 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 09:59:39,197 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 09:59:39,200 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 09:59:39,202 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 09:59:39,205 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597132779204 with initial instances count: 1
2020-08-11 09:59:39,208 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 09:59:39,209 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597132779209, current=UP, previous=STARTING]
2020-08-11 09:59:39,211 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 09:59:39,211 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 09:59:39,236 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 09:59:39,237 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 09:59:39,238 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 09:59:39,281 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 09:59:39,655 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 09:59:39,665 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.269 seconds (JVM running for 9.73)
2020-08-11 09:59:39,931 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:319)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:255)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:178)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy206.save(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createSuperAdminAfterStartup(CreateAfterAppStart.java:89)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:305)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:190)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:153)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.boot.context.event.EventPublishingRunListener.running(EventPublishingRunListener.java:108)
	at org.springframework.boot.SpringApplicationRunListeners.running(SpringApplicationRunListeners.java:77)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at pl.com.ttsw.intership.wholesaleserverapp.WholesaleServerAppApplication.main(WholesaleServerAppApplication.java:21)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:120)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:113)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:742)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:710)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:525)
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:456)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:419)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:459)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:293)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:718)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:704)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:314)
	at com.sun.proxy.$Proxy197.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 33 common frames omitted
2020-08-11 09:59:39,933 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Unregistering application REST-SERVICE with eureka with status DOWN
2020-08-11 09:59:39,933 WARN com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597132779933, current=DOWN, previous=UP]
2020-08-11 09:59:39,933 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 09:59:39,935 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8082"]
2020-08-11 09:59:39,939 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 09:59:39,973 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-08-11 09:59:39,975 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 09:59:39,976 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 09:59:39,977 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 09:59:39,978 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 09:59:39,978 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8082"]
2020-08-11 09:59:39,981 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8082"]
2020-08-11 09:59:39,986 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 09:59:39,988 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'taskScheduler'
2020-08-11 09:59:39,988 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-11 09:59:39,989 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2020-08-11 09:59:40,001 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2020-08-11 09:59:40,001 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2020-08-11 09:59:43,004 INFO com.netflix.discovery.DiscoveryClient [main] Unregistering ...
2020-08-11 09:59:43,009 INFO com.netflix.discovery.DiscoveryClient [main] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - deregister  status: 200
2020-08-11 09:59:43,019 INFO com.netflix.discovery.DiscoveryClient [main] Completed shut down of DiscoveryClient
2020-08-11 10:01:13,275 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 10:01:14,593 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 10:01:14,594 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 10:01:14,598 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 10:01:15,263 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:01:15,265 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 10:01:15,322 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 10:01:15,474 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 200ms. Found 5 JPA repository interfaces.
2020-08-11 10:01:15,497 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:01:15,497 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 10:01:15,517 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:01:15,517 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:01:15,518 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:01:15,518 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:01:15,518 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:01:15,531 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 32ms. Found 1 MongoDB repository interfaces.
2020-08-11 10:01:15,802 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 10:01:16,043 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5ec9eefa' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:01:16,052 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:01:16,309 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 10:01:16,318 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:01:16,318 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 10:01:16,318 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 10:01:16,462 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 10:01:16,462 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1852 ms
2020-08-11 10:01:16,638 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 10:01:16,705 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 10:01:17,010 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 10:01:17,423 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 10:01:18,535 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 10:01:18,634 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 10:01:18,678 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 10:01:18,689 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 10:01:18,742 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 10:01:18,797 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 10:01:18,805 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 10:01:18,931 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 10:01:18,958 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 10:01:19,040 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 10:01:19,050 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:01:19,140 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:01:20,111 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@623bdc46, org.springframework.security.web.context.SecurityContextPersistenceFilter@7359f3ac, org.springframework.security.web.header.HeaderWriterFilter@1443539, org.springframework.web.filter.CorsFilter@411576c7, org.springframework.security.web.authentication.logout.LogoutFilter@2dc77962, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@61ca5134, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3d9cba2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@48d24d63, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@332610ad, org.springframework.security.web.session.SessionManagementFilter@59700156, org.springframework.security.web.access.ExceptionTranslationFilter@2faae7f6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@33d08a24]
2020-08-11 10:01:20,133 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:01:20,133 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:01:20,139 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:01:20,139 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:01:20,206 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 10:01:20,214 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:01:20,607 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 10:01:20,670 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 10:01:20,736 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 10:01:20,817 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 10:01:20,818 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 10:01:20,936 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 10:01:20,936 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 10:01:20,995 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32504e413d310739e3f10b', description='null'}-localhost:27017] Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.waitForConnect(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
	at java.base/java.net.Socket.connect(Socket.java:609)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-08-11 10:01:21,102 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 10:01:21,146 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 10:01:21,146 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 10:01:21,146 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 10:01:21,147 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 10:01:21,147 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 10:01:21,147 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 10:01:21,147 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 10:01:21,259 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 10:01:21,261 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 10:01:21,263 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 10:01:21,267 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597132881266 with initial instances count: 1
2020-08-11 10:01:21,271 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 10:01:21,272 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597132881272, current=UP, previous=STARTING]
2020-08-11 10:01:21,273 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:01:21,274 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 10:01:21,303 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 10:01:21,303 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:01:21,303 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 10:01:21,356 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 10:01:21,740 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 10:01:21,750 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.473 seconds (JVM running for 9.942)
2020-08-11 10:02:17,786 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 10:02:19,089 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 10:02:19,090 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 10:02:19,094 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 10:02:19,739 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:02:19,741 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 10:02:19,798 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 10:02:19,950 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 201ms. Found 5 JPA repository interfaces.
2020-08-11 10:02:19,975 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:02:19,975 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 10:02:19,992 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:02:19,993 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:02:19,993 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:02:19,994 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:02:19,994 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:02:20,006 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 30ms. Found 1 MongoDB repository interfaces.
2020-08-11 10:02:20,282 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 10:02:20,531 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@43d76a92' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:02:20,542 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:02:20,821 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 10:02:20,830 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:02:20,830 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 10:02:20,831 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 10:02:20,981 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 10:02:20,982 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1877 ms
2020-08-11 10:02:21,161 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 10:02:21,226 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 10:02:21,541 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 10:02:21,969 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 10:02:23,096 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 10:02:23,183 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 10:02:23,225 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 10:02:23,234 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 10:02:23,281 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 10:02:23,336 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 10:02:23,353 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 10:02:23,471 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 10:02:23,519 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 10:02:23,576 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32508fb7f3dc7aebc36015', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:1}] to localhost:27017
2020-08-11 10:02:23,581 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32508fb7f3dc7aebc36015', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3416500}
2020-08-11 10:02:23,587 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 10:02:23,621 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:02:23,711 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:02:24,686 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@775fec4, org.springframework.security.web.context.SecurityContextPersistenceFilter@6ca97ddf, org.springframework.security.web.header.HeaderWriterFilter@5862ab28, org.springframework.web.filter.CorsFilter@c7d173f, org.springframework.security.web.authentication.logout.LogoutFilter@3c981f76, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@61e0f9b9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5570ee6d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@47d4468a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@12f12744, org.springframework.security.web.session.SessionManagementFilter@5749e633, org.springframework.security.web.access.ExceptionTranslationFilter@6464f017, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3fc2e100]
2020-08-11 10:02:24,708 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:02:24,708 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:02:24,713 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:02:24,714 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:02:24,737 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 10:02:24,746 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:02:25,173 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 10:02:25,234 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 10:02:25,298 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 10:02:25,378 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 10:02:25,378 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 10:02:25,513 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 10:02:25,513 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 10:02:25,664 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 10:02:25,709 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 10:02:25,709 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 10:02:25,709 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 10:02:25,709 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 10:02:25,709 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 10:02:25,709 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 10:02:25,710 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 10:02:25,803 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 10:02:25,805 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 10:02:25,807 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 10:02:25,809 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597132945809 with initial instances count: 2
2020-08-11 10:02:25,813 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 10:02:25,813 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597132945813, current=UP, previous=STARTING]
2020-08-11 10:02:25,815 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:02:25,815 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 10:02:25,840 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 10:02:25,841 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 10:02:25,841 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:02:25,885 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 10:02:26,272 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 10:02:26,282 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.393 seconds (JVM running for 9.862)
2020-08-11 10:03:45,808 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 10:03:47,189 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 10:03:47,190 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 10:03:47,195 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 10:03:47,846 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:03:47,848 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 10:03:47,911 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 10:03:48,055 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 200ms. Found 5 JPA repository interfaces.
2020-08-11 10:03:48,075 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:03:48,076 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 10:03:48,093 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:03:48,093 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:03:48,094 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:03:48,094 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:03:48,095 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:03:48,107 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 30ms. Found 1 MongoDB repository interfaces.
2020-08-11 10:03:48,376 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 10:03:48,621 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@656842bc' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:03:48,631 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:03:48,909 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 10:03:48,918 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:03:48,919 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 10:03:48,919 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 10:03:49,050 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 10:03:49,051 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1844 ms
2020-08-11 10:03:49,209 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 10:03:49,275 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 10:03:49,578 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 10:03:50,013 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 10:03:51,099 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 10:03:51,182 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 10:03:51,224 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 10:03:51,232 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 10:03:51,280 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 10:03:51,336 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 10:03:51,347 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 10:03:51,478 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 10:03:51,507 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 10:03:51,563 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f3250e787d06324ada2759e', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:2}] to localhost:27017
2020-08-11 10:03:51,568 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f3250e787d06324ada2759e', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3799300}
2020-08-11 10:03:51,594 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 10:03:51,609 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:03:51,694 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:03:52,622 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@28532753, org.springframework.security.web.context.SecurityContextPersistenceFilter@6dc7b7f, org.springframework.security.web.header.HeaderWriterFilter@74ab8610, org.springframework.web.filter.CorsFilter@21399e53, org.springframework.security.web.authentication.logout.LogoutFilter@6413eeb7, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@3d3b852e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@702432cc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1372696b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2a6871ad, org.springframework.security.web.session.SessionManagementFilter@7a79d99c, org.springframework.security.web.access.ExceptionTranslationFilter@40b958c5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2222cd2c]
2020-08-11 10:03:52,643 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:03:52,643 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:03:52,649 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:03:52,649 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:03:52,749 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 10:03:52,757 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:03:53,108 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 10:03:53,170 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 10:03:53,233 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 10:03:53,325 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 10:03:53,325 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 10:03:53,452 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 10:03:53,452 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 10:03:53,609 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 10:03:53,654 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 10:03:53,655 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 10:03:53,655 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 10:03:53,655 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 10:03:53,655 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 10:03:53,655 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 10:03:53,655 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 10:03:53,756 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 10:03:53,758 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 10:03:53,760 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 10:03:53,763 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597133033762 with initial instances count: 2
2020-08-11 10:03:53,766 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 10:03:53,767 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597133033767, current=UP, previous=STARTING]
2020-08-11 10:03:53,769 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:03:53,769 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 10:03:53,794 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 10:03:53,795 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 10:03:53,798 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:03:53,843 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 10:03:54,243 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 10:03:54,253 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.418 seconds (JVM running for 9.869)
2020-08-11 10:03:54,532 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:319)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:255)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:178)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy200.save(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createSuperAdminAfterStartup(CreateAfterAppStart.java:90)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createRoleAfterAppStartup(CreateAfterAppStart.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:305)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:190)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:153)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.boot.context.event.EventPublishingRunListener.running(EventPublishingRunListener.java:108)
	at org.springframework.boot.SpringApplicationRunListeners.running(SpringApplicationRunListeners.java:77)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at pl.com.ttsw.intership.wholesaleserverapp.WholesaleServerAppApplication.main(WholesaleServerAppApplication.java:21)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:120)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:113)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:742)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:710)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:525)
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:456)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:419)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:459)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:293)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:718)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:704)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:314)
	at com.sun.proxy.$Proxy197.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 34 common frames omitted
2020-08-11 10:03:54,533 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Unregistering application REST-SERVICE with eureka with status DOWN
2020-08-11 10:03:54,533 WARN com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597133034533, current=DOWN, previous=UP]
2020-08-11 10:03:54,533 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:03:54,535 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:03:54,539 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:03:54,574 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-08-11 10:03:54,576 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:03:54,577 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:03:54,577 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:03:54,578 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:03:54,578 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8082"]
2020-08-11 10:03:54,581 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8082"]
2020-08-11 10:03:54,588 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:03:54,590 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'taskScheduler'
2020-08-11 10:03:54,590 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-11 10:03:54,590 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2020-08-11 10:03:54,601 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2020-08-11 10:03:54,602 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2020-08-11 10:03:57,605 INFO com.netflix.discovery.DiscoveryClient [main] Unregistering ...
2020-08-11 10:03:57,609 INFO com.netflix.discovery.DiscoveryClient [main] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - deregister  status: 200
2020-08-11 10:03:57,619 INFO com.netflix.discovery.DiscoveryClient [main] Completed shut down of DiscoveryClient
2020-08-11 10:06:05,294 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 10:06:06,490 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 10:06:06,491 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 10:06:06,495 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 10:06:07,127 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:06:07,129 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 10:06:07,185 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 10:06:07,330 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 192ms. Found 5 JPA repository interfaces.
2020-08-11 10:06:07,350 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:06:07,350 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 10:06:07,368 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:06:07,368 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:06:07,369 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:06:07,369 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:06:07,369 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:06:07,381 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 30ms. Found 1 MongoDB repository interfaces.
2020-08-11 10:06:07,649 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 10:06:07,890 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@10d18696' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:06:07,899 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:06:08,166 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 10:06:08,175 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:06:08,175 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 10:06:08,176 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 10:06:08,325 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 10:06:08,326 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1820 ms
2020-08-11 10:06:08,487 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 10:06:08,551 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 10:06:08,861 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 10:06:09,273 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 10:06:10,387 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 10:06:10,488 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 10:06:10,538 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 10:06:10,547 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 10:06:10,596 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 10:06:10,647 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 10:06:10,654 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 10:06:10,786 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 10:06:10,817 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 10:06:10,873 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32517207bf2135b8c6dc1e', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:3}] to localhost:27017
2020-08-11 10:06:10,879 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32517207bf2135b8c6dc1e', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4413300}
2020-08-11 10:06:10,904 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 10:06:10,915 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:06:11,005 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:06:11,913 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@68c3aa38, org.springframework.security.web.context.SecurityContextPersistenceFilter@506e382b, org.springframework.security.web.header.HeaderWriterFilter@36ec4071, org.springframework.web.filter.CorsFilter@1196537d, org.springframework.security.web.authentication.logout.LogoutFilter@7b44e98e, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@34e9de8d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@170f0fd6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@34d0c331, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@267a8777, org.springframework.security.web.session.SessionManagementFilter@3d9cba2, org.springframework.security.web.access.ExceptionTranslationFilter@237bdbcb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@19834eb7]
2020-08-11 10:06:11,936 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:06:11,937 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:06:11,942 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:06:11,943 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:06:12,014 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 10:06:12,022 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:06:12,455 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 10:06:12,525 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 10:06:12,598 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 10:06:12,690 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 10:06:12,690 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 10:06:12,828 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 10:06:12,829 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 10:06:12,983 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 10:06:13,038 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 10:06:13,038 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 10:06:13,039 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 10:06:13,039 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 10:06:13,039 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 10:06:13,039 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 10:06:13,039 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 10:06:13,154 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 10:06:13,156 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 10:06:13,158 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 10:06:13,162 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597133173160 with initial instances count: 1
2020-08-11 10:06:13,165 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 10:06:13,166 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597133173166, current=UP, previous=STARTING]
2020-08-11 10:06:13,168 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:06:13,168 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 10:06:13,194 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:06:13,194 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 10:06:13,194 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 10:06:13,240 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 10:06:13,626 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 10:06:13,640 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.234 seconds (JVM running for 9.691)
2020-08-11 10:06:38,882 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 10:06:40,086 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 10:06:40,087 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 10:06:40,091 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 10:06:40,749 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:06:40,751 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 10:06:40,806 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 10:06:40,951 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 192ms. Found 5 JPA repository interfaces.
2020-08-11 10:06:40,975 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:06:40,975 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 10:06:40,993 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:06:40,993 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:06:40,994 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:06:40,994 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:06:40,994 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:06:41,006 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 31ms. Found 1 MongoDB repository interfaces.
2020-08-11 10:06:41,277 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 10:06:41,509 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@12192604' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:06:41,519 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:06:41,784 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 10:06:41,793 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:06:41,794 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 10:06:41,794 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 10:06:41,947 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 10:06:41,949 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1845 ms
2020-08-11 10:06:42,102 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 10:06:42,170 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 10:06:42,479 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 10:06:42,992 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 10:06:44,080 INFO liquibase.logging.core.JavaLogger [main] Creating database history table with name: wholesale.databasechangelog
2020-08-11 10:06:44,130 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 10:06:44,269 INFO liquibase.logging.core.JavaLogger [main] Table users created
2020-08-11 10:06:44,284 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::1::artur ran successfully in 34ms
2020-08-11 10:06:44,342 INFO liquibase.logging.core.JavaLogger [main] Table roles created
2020-08-11 10:06:44,355 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::2::artur ran successfully in 29ms
2020-08-11 10:06:44,398 INFO liquibase.logging.core.JavaLogger [main] Table users_roles created
2020-08-11 10:06:44,413 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::3::artur ran successfully in 30ms
2020-08-11 10:06:44,457 INFO liquibase.logging.core.JavaLogger [main] Table basket_items created
2020-08-11 10:06:44,471 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::4::artur ran successfully in 31ms
2020-08-11 10:06:44,516 INFO liquibase.logging.core.JavaLogger [main] Table orders created
2020-08-11 10:06:44,530 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::5::artur ran successfully in 31ms
2020-08-11 10:06:44,574 INFO liquibase.logging.core.JavaLogger [main] Table warehouses created
2020-08-11 10:06:44,589 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::6::artur ran successfully in 31ms
2020-08-11 10:06:44,631 INFO liquibase.logging.core.JavaLogger [main] Table invoicepdf created
2020-08-11 10:06:44,646 INFO liquibase.logging.core.JavaLogger [main] Table orderpdf created
2020-08-11 10:06:44,660 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::7::marcin ran successfully in 44ms
2020-08-11 10:06:44,703 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to users_roles (role_id)
2020-08-11 10:06:44,717 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::7::artur ran successfully in 30ms
2020-08-11 10:06:44,759 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to users_roles (user_id)
2020-08-11 10:06:44,772 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::8::artur ran successfully in 28ms
2020-08-11 10:06:44,814 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to orders (warehouse_id)
2020-08-11 10:06:44,827 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::9::artur ran successfully in 27ms
2020-08-11 10:06:44,869 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to basket_items (order_id)
2020-08-11 10:06:44,883 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::10::artur ran successfully in 28ms
2020-08-11 10:06:44,925 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to orders (user_id)
2020-08-11 10:06:44,939 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::11::artur ran successfully in 29ms
2020-08-11 10:06:44,982 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to warehouses (user_id)
2020-08-11 10:06:44,996 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::12::artur ran successfully in 27ms
2020-08-11 10:06:45,050 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 10:06:45,093 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 10:06:45,103 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 10:06:45,156 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 10:06:45,214 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 10:06:45,240 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 10:06:45,352 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 10:06:45,404 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 10:06:45,459 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32519523b552117a552c9b', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:4}] to localhost:27017
2020-08-11 10:06:45,464 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32519523b552117a552c9b', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4050400}
2020-08-11 10:06:45,467 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 10:06:45,503 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:06:45,588 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:06:46,577 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@28532753, org.springframework.security.web.context.SecurityContextPersistenceFilter@6dc7b7f, org.springframework.security.web.header.HeaderWriterFilter@74ab8610, org.springframework.web.filter.CorsFilter@21399e53, org.springframework.security.web.authentication.logout.LogoutFilter@6413eeb7, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@3340ff7c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@702432cc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1372696b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2a6871ad, org.springframework.security.web.session.SessionManagementFilter@7a79d99c, org.springframework.security.web.access.ExceptionTranslationFilter@40b958c5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2222cd2c]
2020-08-11 10:06:46,597 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:06:46,597 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:06:46,603 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:06:46,604 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:06:46,610 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 10:06:46,618 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:06:47,064 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 10:06:47,136 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 10:06:47,202 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 10:06:47,291 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 10:06:47,291 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 10:06:47,419 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 10:06:47,419 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 10:06:47,591 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 10:06:47,639 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 10:06:47,639 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 10:06:47,640 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 10:06:47,640 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 10:06:47,640 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 10:06:47,640 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 10:06:47,640 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 10:06:47,738 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 10:06:47,740 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 10:06:47,742 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 10:06:47,745 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597133207744 with initial instances count: 2
2020-08-11 10:06:47,750 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 10:06:47,750 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597133207750, current=UP, previous=STARTING]
2020-08-11 10:06:47,752 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:06:47,752 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 10:06:47,778 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 10:06:47,779 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 10:06:47,780 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:06:47,827 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 10:06:48,243 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 10:06:48,252 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 10.347 seconds (JVM running for 10.807)
2020-08-11 10:06:48,423 INFO pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart [main] user ROLE ADDED
2020-08-11 10:06:48,458 INFO pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart [main] ADMIN ROLE ADDED
2020-08-11 10:08:08,546 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 10:08:09,733 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 10:08:09,734 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 10:08:09,739 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 10:08:10,425 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:08:10,427 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 10:08:10,481 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 10:08:10,625 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 190ms. Found 5 JPA repository interfaces.
2020-08-11 10:08:10,649 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:08:10,649 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 10:08:10,667 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:08:10,667 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:08:10,668 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:08:10,668 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:08:10,669 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:08:10,681 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 31ms. Found 1 MongoDB repository interfaces.
2020-08-11 10:08:10,946 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 10:08:11,200 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7a66c35a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:08:11,211 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:08:11,511 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 10:08:11,521 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:08:11,522 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 10:08:11,522 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 10:08:11,671 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 10:08:11,671 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1917 ms
2020-08-11 10:08:11,828 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 10:08:11,896 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 10:08:12,229 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 10:08:12,643 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 10:08:13,796 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 10:08:13,891 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 10:08:13,938 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 10:08:13,950 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 10:08:14,015 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 10:08:14,085 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 10:08:14,110 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 10:08:14,257 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 10:08:14,302 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 10:08:14,355 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f3251ee1076f74521e68a4a', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:5}] to localhost:27017
2020-08-11 10:08:14,360 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f3251ee1076f74521e68a4a', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3600100}
2020-08-11 10:08:14,370 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 10:08:14,400 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:08:14,487 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:08:15,451 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@42d96745, org.springframework.security.web.context.SecurityContextPersistenceFilter@36ce9eaf, org.springframework.security.web.header.HeaderWriterFilter@5af1b221, org.springframework.web.filter.CorsFilter@4d1f168, org.springframework.security.web.authentication.logout.LogoutFilter@6ac0fd1d, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@69a294d8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1f27f354, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@355b4c34, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9e4388d, org.springframework.security.web.session.SessionManagementFilter@3f0b5619, org.springframework.security.web.access.ExceptionTranslationFilter@17554316, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2c485b3a]
2020-08-11 10:08:15,475 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:08:15,475 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:08:15,480 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:08:15,480 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:08:15,555 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 10:08:15,562 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:08:15,940 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 10:08:16,002 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 10:08:16,077 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 10:08:16,159 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 10:08:16,159 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 10:08:16,284 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 10:08:16,285 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 10:08:16,427 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 10:08:16,478 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 10:08:16,478 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 10:08:16,478 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 10:08:16,478 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 10:08:16,478 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 10:08:16,478 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 10:08:16,479 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 10:08:16,580 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 10:08:16,583 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 10:08:16,585 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 10:08:16,589 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597133296588 with initial instances count: 2
2020-08-11 10:08:16,593 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 10:08:16,594 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597133296594, current=UP, previous=STARTING]
2020-08-11 10:08:16,596 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:08:16,596 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 10:08:16,622 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:08:16,622 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 10:08:16,623 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 10:08:16,668 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 10:08:17,061 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 10:08:17,071 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.44 seconds (JVM running for 9.894)
2020-08-11 10:08:17,355 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:319)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:255)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:178)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy206.save(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createSuperAdminAfterStartup(CreateAfterAppStart.java:92)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createRoleAfterAppStartup(CreateAfterAppStart.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:305)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:190)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:153)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.boot.context.event.EventPublishingRunListener.running(EventPublishingRunListener.java:108)
	at org.springframework.boot.SpringApplicationRunListeners.running(SpringApplicationRunListeners.java:77)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at pl.com.ttsw.intership.wholesaleserverapp.WholesaleServerAppApplication.main(WholesaleServerAppApplication.java:21)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:120)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:113)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:742)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:710)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:525)
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:456)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:419)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:459)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:293)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:718)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:704)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:314)
	at com.sun.proxy.$Proxy197.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 34 common frames omitted
2020-08-11 10:08:17,357 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Unregistering application REST-SERVICE with eureka with status DOWN
2020-08-11 10:08:17,357 WARN com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597133297357, current=DOWN, previous=UP]
2020-08-11 10:08:17,357 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:08:17,359 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:08:17,362 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:08:17,393 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-08-11 10:08:17,395 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:08:17,396 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:08:17,397 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:08:17,397 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:08:17,398 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8082"]
2020-08-11 10:08:17,401 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8082"]
2020-08-11 10:08:17,407 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:08:17,409 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'taskScheduler'
2020-08-11 10:08:17,409 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-11 10:08:17,410 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2020-08-11 10:08:17,422 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2020-08-11 10:08:17,423 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2020-08-11 10:08:20,426 INFO com.netflix.discovery.DiscoveryClient [main] Unregistering ...
2020-08-11 10:08:20,430 INFO com.netflix.discovery.DiscoveryClient [main] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - deregister  status: 200
2020-08-11 10:08:20,440 INFO com.netflix.discovery.DiscoveryClient [main] Completed shut down of DiscoveryClient
2020-08-11 10:08:50,516 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 10:08:51,765 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 10:08:51,766 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 10:08:51,770 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 10:08:52,418 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:08:52,421 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 10:08:52,491 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 10:08:52,639 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 209ms. Found 5 JPA repository interfaces.
2020-08-11 10:08:52,659 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:08:52,660 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 10:08:52,677 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:08:52,678 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:08:52,678 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:08:52,679 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:08:52,679 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:08:52,691 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 31ms. Found 1 MongoDB repository interfaces.
2020-08-11 10:08:52,956 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 10:08:53,191 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@310d57b1' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:08:53,200 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:08:53,458 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 10:08:53,466 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:08:53,466 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 10:08:53,466 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 10:08:53,631 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 10:08:53,631 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1850 ms
2020-08-11 10:08:53,817 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 10:08:53,902 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 10:08:54,236 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 10:08:54,690 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 10:08:55,839 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 10:08:55,937 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 10:08:55,980 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 10:08:55,990 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 10:08:56,038 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 10:08:56,093 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 10:08:56,111 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 10:08:56,228 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 10:08:56,271 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 10:08:56,326 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f3252187b832215bccb327a', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:6}] to localhost:27017
2020-08-11 10:08:56,330 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f3252187b832215bccb327a', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3287300}
2020-08-11 10:08:56,340 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 10:08:56,373 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:08:56,462 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:08:57,405 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@81a56b2, org.springframework.security.web.context.SecurityContextPersistenceFilter@13e6c544, org.springframework.security.web.header.HeaderWriterFilter@67afc9b6, org.springframework.web.filter.CorsFilter@488c6c98, org.springframework.security.web.authentication.logout.LogoutFilter@248ba4fc, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@55cb3b7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3b3b2290, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@532e00bd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2530baf6, org.springframework.security.web.session.SessionManagementFilter@34a99d8, org.springframework.security.web.access.ExceptionTranslationFilter@252d2ac0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6e757f39]
2020-08-11 10:08:57,415 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 10:08:57,423 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:08:57,428 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:08:57,428 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:08:57,433 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:08:57,433 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:08:57,884 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 10:08:57,959 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 10:08:58,025 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 10:08:58,116 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 10:08:58,116 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 10:08:58,247 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 10:08:58,247 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 10:08:58,408 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 10:08:58,453 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 10:08:58,453 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 10:08:58,453 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 10:08:58,453 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 10:08:58,453 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 10:08:58,453 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 10:08:58,453 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 10:08:58,550 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 10:08:58,552 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 10:08:58,554 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 10:08:58,557 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597133338556 with initial instances count: 1
2020-08-11 10:08:58,561 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 10:08:58,561 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597133338561, current=UP, previous=STARTING]
2020-08-11 10:08:58,563 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:08:58,563 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 10:08:58,588 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 10:08:58,589 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 10:08:58,590 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:08:58,634 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 10:08:59,026 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 10:08:59,036 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.414 seconds (JVM running for 9.869)
2020-08-11 10:08:59,331 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:319)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:255)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:178)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy206.save(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createSuperAdminAfterStartup(CreateAfterAppStart.java:92)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createRoleAfterAppStartup(CreateAfterAppStart.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:305)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:190)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:153)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.boot.context.event.EventPublishingRunListener.running(EventPublishingRunListener.java:108)
	at org.springframework.boot.SpringApplicationRunListeners.running(SpringApplicationRunListeners.java:77)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at pl.com.ttsw.intership.wholesaleserverapp.WholesaleServerAppApplication.main(WholesaleServerAppApplication.java:21)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:120)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:113)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:742)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:710)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:525)
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:456)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:419)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:459)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:293)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:718)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:704)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:314)
	at com.sun.proxy.$Proxy197.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 34 common frames omitted
2020-08-11 10:08:59,332 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Unregistering application REST-SERVICE with eureka with status DOWN
2020-08-11 10:08:59,332 WARN com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597133339332, current=DOWN, previous=UP]
2020-08-11 10:08:59,332 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:08:59,334 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:08:59,337 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:08:59,369 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-08-11 10:08:59,372 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:08:59,372 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:08:59,373 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:08:59,373 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:08:59,374 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8082"]
2020-08-11 10:08:59,376 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8082"]
2020-08-11 10:08:59,382 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:08:59,384 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'taskScheduler'
2020-08-11 10:08:59,384 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-11 10:08:59,384 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2020-08-11 10:08:59,397 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2020-08-11 10:08:59,398 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2020-08-11 10:09:02,400 INFO com.netflix.discovery.DiscoveryClient [main] Unregistering ...
2020-08-11 10:09:02,406 INFO com.netflix.discovery.DiscoveryClient [main] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - deregister  status: 200
2020-08-11 10:09:02,414 INFO com.netflix.discovery.DiscoveryClient [main] Completed shut down of DiscoveryClient
2020-08-11 10:09:42,878 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 10:09:44,128 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 10:09:44,129 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 10:09:44,133 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 10:09:44,757 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:09:44,759 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 10:09:44,809 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 10:09:44,945 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 178ms. Found 5 JPA repository interfaces.
2020-08-11 10:09:44,965 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:09:44,965 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 10:09:44,982 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:09:44,982 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:09:44,983 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:09:44,983 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:09:44,984 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:09:44,996 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 30ms. Found 1 MongoDB repository interfaces.
2020-08-11 10:09:45,270 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 10:09:45,518 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2726a511' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:09:45,526 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:09:45,795 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 10:09:45,804 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:09:45,805 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 10:09:45,805 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 10:09:45,931 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 10:09:45,932 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1788 ms
2020-08-11 10:09:46,083 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 10:09:46,153 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 10:09:46,471 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 10:09:46,919 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 10:09:48,052 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 10:09:48,138 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 10:09:48,199 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 10:09:48,207 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 10:09:48,256 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 10:09:48,309 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 10:09:48,325 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 10:09:48,444 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 10:09:48,483 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 10:09:48,537 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32524c5c5c0158d8d005fa', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:7}] to localhost:27017
2020-08-11 10:09:48,542 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32524c5c5c0158d8d005fa', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4340500}
2020-08-11 10:09:48,556 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 10:09:48,580 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:09:48,667 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:09:49,573 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a00d591, org.springframework.security.web.context.SecurityContextPersistenceFilter@17554316, org.springframework.security.web.header.HeaderWriterFilter@2caa9666, org.springframework.web.filter.CorsFilter@4fae4c3b, org.springframework.security.web.authentication.logout.LogoutFilter@21539796, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@4866e0a7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5af1b221, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@296949c8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2222cd2c, org.springframework.security.web.session.SessionManagementFilter@749ffdc7, org.springframework.security.web.access.ExceptionTranslationFilter@4964d801, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5134a7d6]
2020-08-11 10:09:49,595 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:09:49,595 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:09:49,601 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:09:49,601 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:09:49,698 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 10:09:49,706 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:09:50,063 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 10:09:50,124 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 10:09:50,187 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 10:09:50,266 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 10:09:50,266 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 10:09:50,389 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 10:09:50,389 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 10:09:50,524 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 10:09:50,581 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 10:09:50,581 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 10:09:50,581 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 10:09:50,582 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 10:09:50,582 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 10:09:50,582 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 10:09:50,582 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 10:09:50,687 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 10:09:50,689 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 10:09:50,691 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 10:09:50,694 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597133390693 with initial instances count: 1
2020-08-11 10:09:50,697 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 10:09:50,698 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597133390698, current=UP, previous=STARTING]
2020-08-11 10:09:50,699 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:09:50,699 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 10:09:50,724 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 10:09:50,724 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 10:09:50,725 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:09:50,770 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 10:09:51,158 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 10:09:51,167 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.182 seconds (JVM running for 9.642)
2020-08-11 10:09:51,449 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:319)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:255)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:178)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy202.save(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createSuperAdminAfterStartup(CreateAfterAppStart.java:92)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createRoleAfterAppStartup(CreateAfterAppStart.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:305)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:190)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:153)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.boot.context.event.EventPublishingRunListener.running(EventPublishingRunListener.java:108)
	at org.springframework.boot.SpringApplicationRunListeners.running(SpringApplicationRunListeners.java:77)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at pl.com.ttsw.intership.wholesaleserverapp.WholesaleServerAppApplication.main(WholesaleServerAppApplication.java:21)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:120)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:113)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:742)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:710)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:525)
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:456)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:419)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:459)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:293)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:718)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:704)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:314)
	at com.sun.proxy.$Proxy197.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 34 common frames omitted
2020-08-11 10:09:51,450 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Unregistering application REST-SERVICE with eureka with status DOWN
2020-08-11 10:09:51,450 WARN com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597133391450, current=DOWN, previous=UP]
2020-08-11 10:09:51,451 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:09:51,453 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:09:51,456 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:09:51,490 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-08-11 10:09:51,492 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:09:51,493 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:09:51,494 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:09:51,494 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:09:51,495 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8082"]
2020-08-11 10:09:51,497 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8082"]
2020-08-11 10:09:51,502 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:09:51,504 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'taskScheduler'
2020-08-11 10:09:51,505 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-11 10:09:51,505 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2020-08-11 10:09:51,517 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2020-08-11 10:09:51,517 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2020-08-11 10:09:54,522 INFO com.netflix.discovery.DiscoveryClient [main] Unregistering ...
2020-08-11 10:09:54,526 INFO com.netflix.discovery.DiscoveryClient [main] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - deregister  status: 200
2020-08-11 10:09:54,535 INFO com.netflix.discovery.DiscoveryClient [main] Completed shut down of DiscoveryClient
2020-08-11 10:10:18,483 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 10:10:19,674 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 10:10:19,674 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 10:10:19,678 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 10:10:20,315 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:10:20,317 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 10:10:20,368 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 10:10:20,501 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 176ms. Found 5 JPA repository interfaces.
2020-08-11 10:10:20,522 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:10:20,522 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 10:10:20,540 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:10:20,540 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:10:20,541 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:10:20,541 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:10:20,541 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:10:20,553 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 30ms. Found 1 MongoDB repository interfaces.
2020-08-11 10:10:20,823 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 10:10:21,069 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@fddd7ae' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:10:21,079 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:10:21,361 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 10:10:21,370 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:10:21,370 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 10:10:21,370 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 10:10:21,496 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 10:10:21,496 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1807 ms
2020-08-11 10:10:21,655 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 10:10:21,721 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 10:10:22,030 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 10:10:22,437 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 10:10:23,557 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 10:10:23,635 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 10:10:23,736 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 10:10:23,750 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 10:10:23,806 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 10:10:23,859 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 10:10:23,869 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 10:10:23,995 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 10:10:24,028 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 10:10:24,083 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32527006ca5b0971331eba', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:8}] to localhost:27017
2020-08-11 10:10:24,088 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32527006ca5b0971331eba', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3476500}
2020-08-11 10:10:24,113 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 10:10:24,129 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:10:24,217 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:10:25,099 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@58038583, org.springframework.security.web.context.SecurityContextPersistenceFilter@60739eca, org.springframework.security.web.header.HeaderWriterFilter@6ca97ddf, org.springframework.web.filter.CorsFilter@6491006, org.springframework.security.web.authentication.logout.LogoutFilter@7ca0b05e, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@121dac1a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@17873842, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5df7ae0a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@42fb2be9, org.springframework.security.web.session.SessionManagementFilter@7833407, org.springframework.security.web.access.ExceptionTranslationFilter@5749e633, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1a82453]
2020-08-11 10:10:25,121 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:10:25,121 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:10:25,127 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:10:25,127 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:10:25,223 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 10:10:25,230 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:10:25,582 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 10:10:25,646 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 10:10:25,712 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 10:10:25,796 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 10:10:25,796 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 10:10:25,928 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 10:10:25,928 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 10:10:26,073 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 10:10:26,129 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 10:10:26,129 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 10:10:26,129 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 10:10:26,129 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 10:10:26,129 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 10:10:26,130 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 10:10:26,130 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 10:10:26,229 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 10:10:26,231 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 10:10:26,233 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 10:10:26,236 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597133426235 with initial instances count: 1
2020-08-11 10:10:26,240 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 10:10:26,240 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597133426240, current=UP, previous=STARTING]
2020-08-11 10:10:26,242 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:10:26,242 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 10:10:26,267 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 10:10:26,268 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 10:10:26,269 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:10:26,315 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 10:10:26,700 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 10:10:26,710 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.126 seconds (JVM running for 9.579)
2020-08-11 10:10:26,976 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:319)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:255)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:178)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy206.save(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createSuperAdminAfterStartup(CreateAfterAppStart.java:92)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createRoleAfterAppStartup(CreateAfterAppStart.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:305)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:190)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:153)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.boot.context.event.EventPublishingRunListener.running(EventPublishingRunListener.java:108)
	at org.springframework.boot.SpringApplicationRunListeners.running(SpringApplicationRunListeners.java:77)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at pl.com.ttsw.intership.wholesaleserverapp.WholesaleServerAppApplication.main(WholesaleServerAppApplication.java:21)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:120)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:113)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:742)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:710)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:525)
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:456)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:419)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:459)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:293)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:718)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:704)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:314)
	at com.sun.proxy.$Proxy197.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 34 common frames omitted
2020-08-11 10:10:26,977 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Unregistering application REST-SERVICE with eureka with status DOWN
2020-08-11 10:10:26,977 WARN com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597133426977, current=DOWN, previous=UP]
2020-08-11 10:10:26,978 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:10:26,980 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:10:26,981 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:10:27,012 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-08-11 10:10:27,014 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:10:27,015 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:10:27,015 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:10:27,016 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:10:27,016 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8082"]
2020-08-11 10:10:27,019 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8082"]
2020-08-11 10:10:27,024 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:10:27,026 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'taskScheduler'
2020-08-11 10:10:27,027 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-11 10:10:27,027 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2020-08-11 10:10:27,038 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2020-08-11 10:10:27,039 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2020-08-11 10:10:30,041 INFO com.netflix.discovery.DiscoveryClient [main] Unregistering ...
2020-08-11 10:10:30,046 INFO com.netflix.discovery.DiscoveryClient [main] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - deregister  status: 200
2020-08-11 10:10:30,063 INFO com.netflix.discovery.DiscoveryClient [main] Completed shut down of DiscoveryClient
2020-08-11 10:18:55,507 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 10:18:58,098 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 10:18:58,099 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 10:18:58,103 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 10:18:58,727 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:18:58,729 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 10:18:58,782 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 10:18:58,916 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 178ms. Found 5 JPA repository interfaces.
2020-08-11 10:18:58,937 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:18:58,937 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 10:18:58,955 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:18:58,956 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:18:58,956 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:18:58,957 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:18:58,957 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:18:58,969 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 31ms. Found 1 MongoDB repository interfaces.
2020-08-11 10:18:59,228 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 10:18:59,481 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6459f4ea' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:18:59,489 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:18:59,763 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 10:18:59,774 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:18:59,774 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 10:18:59,774 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 10:18:59,914 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 10:18:59,914 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1800 ms
2020-08-11 10:19:00,076 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 10:19:00,143 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 10:19:00,471 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 10:19:00,881 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 10:19:02,097 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 10:19:02,191 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 10:19:02,234 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 10:19:02,242 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 10:19:02,292 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 10:19:02,347 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 10:19:02,355 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 10:19:02,483 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 10:19:02,512 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 10:19:02,566 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f3254761067725f8200b1d3', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:9}] to localhost:27017
2020-08-11 10:19:02,571 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f3254761067725f8200b1d3', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4284000}
2020-08-11 10:19:02,598 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 10:19:02,608 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:19:02,699 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:19:03,620 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@106ac5f4, org.springframework.security.web.context.SecurityContextPersistenceFilter@147aceec, org.springframework.security.web.header.HeaderWriterFilter@3e563293, org.springframework.web.filter.CorsFilter@5eed2edf, org.springframework.security.web.authentication.logout.LogoutFilter@56f19f36, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@3cae4518, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@315365ef, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5cff6d1d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4552e288, org.springframework.security.web.session.SessionManagementFilter@9ba167e, org.springframework.security.web.access.ExceptionTranslationFilter@60658389, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5746609e]
2020-08-11 10:19:03,645 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:19:03,646 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:19:03,652 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:19:03,653 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:19:04,150 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 10:19:04,221 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 10:19:04,301 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 10:19:04,388 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 10:19:04,388 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 10:19:04,512 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 10:19:04,513 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 10:19:04,559 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 10:19:04,566 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:19:04,656 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 10:19:04,715 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 10:19:04,716 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 10:19:04,716 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 10:19:04,716 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 10:19:04,716 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 10:19:04,716 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 10:19:04,716 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 10:19:04,827 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 10:19:04,829 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 10:19:04,831 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 10:19:04,835 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597133944833 with initial instances count: 1
2020-08-11 10:19:04,839 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 10:19:04,839 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597133944839, current=UP, previous=STARTING]
2020-08-11 10:19:04,841 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:19:04,841 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 10:19:04,872 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 10:19:04,873 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 10:19:04,876 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:19:04,918 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 10:19:05,328 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 10:19:05,340 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 10.789 seconds (JVM running for 11.244)
2020-08-11 10:19:05,605 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:319)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:255)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:178)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy205.save(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createSuperAdminAfterStartup(CreateAfterAppStart.java:92)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createRoleAfterAppStartup(CreateAfterAppStart.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:305)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:190)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:153)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.boot.context.event.EventPublishingRunListener.running(EventPublishingRunListener.java:108)
	at org.springframework.boot.SpringApplicationRunListeners.running(SpringApplicationRunListeners.java:77)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at pl.com.ttsw.intership.wholesaleserverapp.WholesaleServerAppApplication.main(WholesaleServerAppApplication.java:21)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:120)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:113)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:742)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:710)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:525)
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:456)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:419)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:459)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:293)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:718)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:704)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:314)
	at com.sun.proxy.$Proxy197.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 34 common frames omitted
2020-08-11 10:19:05,607 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Unregistering application REST-SERVICE with eureka with status DOWN
2020-08-11 10:19:05,607 WARN com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597133945607, current=DOWN, previous=UP]
2020-08-11 10:19:05,607 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:19:05,609 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:19:05,610 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:19:05,644 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-08-11 10:19:05,646 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:19:05,647 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:19:05,648 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:19:05,648 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:19:05,649 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8082"]
2020-08-11 10:19:05,652 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8082"]
2020-08-11 10:19:05,658 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:19:05,660 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'taskScheduler'
2020-08-11 10:19:05,660 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-11 10:19:05,660 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2020-08-11 10:19:05,673 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2020-08-11 10:19:05,673 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2020-08-11 10:19:08,675 INFO com.netflix.discovery.DiscoveryClient [main] Unregistering ...
2020-08-11 10:19:08,680 INFO com.netflix.discovery.DiscoveryClient [main] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - deregister  status: 200
2020-08-11 10:19:08,689 INFO com.netflix.discovery.DiscoveryClient [main] Completed shut down of DiscoveryClient
2020-08-11 10:22:49,004 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 10:22:50,208 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 10:22:50,209 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 10:22:50,214 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 10:22:50,853 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:22:50,855 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 10:22:50,910 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 10:22:51,050 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 188ms. Found 5 JPA repository interfaces.
2020-08-11 10:22:51,070 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:22:51,070 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 10:22:51,087 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:22:51,088 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:22:51,088 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:22:51,089 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:22:51,089 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:22:51,102 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 31ms. Found 1 MongoDB repository interfaces.
2020-08-11 10:22:51,371 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 10:22:51,615 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1eeb5818' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:22:51,624 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:22:51,907 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 10:22:51,917 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:22:51,917 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 10:22:51,917 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 10:22:52,068 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 10:22:52,069 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1844 ms
2020-08-11 10:22:52,237 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 10:22:52,301 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 10:22:52,645 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 10:22:53,048 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 10:22:54,333 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 10:22:54,438 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 10:22:54,498 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 10:22:54,507 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 10:22:54,558 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 10:22:54,611 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 10:22:54,614 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 10:22:54,742 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 10:22:54,776 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 10:22:54,828 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32555ef5989c036ad208bb', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:10}] to localhost:27017
2020-08-11 10:22:54,833 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32555ef5989c036ad208bb', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3694500}
2020-08-11 10:22:54,868 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 10:22:54,873 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:22:54,962 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:22:55,925 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6b8cdc4, org.springframework.security.web.context.SecurityContextPersistenceFilter@69d2c460, org.springframework.security.web.header.HeaderWriterFilter@4425b6ed, org.springframework.web.filter.CorsFilter@79e28671, org.springframework.security.web.authentication.logout.LogoutFilter@4c678a1f, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@750c23a3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3e984100, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@623ed5ed, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@ad6255e, org.springframework.security.web.session.SessionManagementFilter@21539796, org.springframework.security.web.access.ExceptionTranslationFilter@1f27f354, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3792fed8]
2020-08-11 10:22:55,950 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:22:55,950 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:22:55,956 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:22:55,956 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:22:56,036 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 10:22:56,044 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:22:56,422 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 10:22:56,486 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 10:22:56,551 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 10:22:56,632 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 10:22:56,633 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 10:22:56,755 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 10:22:56,755 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 10:22:56,910 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 10:22:56,953 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 10:22:56,953 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 10:22:56,954 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 10:22:56,955 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 10:22:56,956 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 10:22:56,956 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 10:22:56,956 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 10:22:57,055 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 10:22:57,058 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 10:22:57,060 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 10:22:57,064 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597134177063 with initial instances count: 1
2020-08-11 10:22:57,068 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 10:22:57,069 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597134177069, current=UP, previous=STARTING]
2020-08-11 10:22:57,070 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:22:57,070 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 10:22:57,096 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 10:22:57,097 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 10:22:57,097 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:22:57,142 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 10:22:57,523 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 10:22:57,533 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.427 seconds (JVM running for 9.894)
2020-08-11 10:22:57,793 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:319)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:255)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:178)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy203.save(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createSuperAdminAfterStartup(CreateAfterAppStart.java:92)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createRoleAfterAppStartup(CreateAfterAppStart.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:305)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:190)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:153)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.boot.context.event.EventPublishingRunListener.running(EventPublishingRunListener.java:108)
	at org.springframework.boot.SpringApplicationRunListeners.running(SpringApplicationRunListeners.java:77)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at pl.com.ttsw.intership.wholesaleserverapp.WholesaleServerAppApplication.main(WholesaleServerAppApplication.java:21)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:120)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:113)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:742)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:710)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:525)
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:456)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:419)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:459)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:293)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:718)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:704)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:314)
	at com.sun.proxy.$Proxy197.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 34 common frames omitted
2020-08-11 10:22:57,795 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Unregistering application REST-SERVICE with eureka with status DOWN
2020-08-11 10:22:57,795 WARN com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597134177795, current=DOWN, previous=UP]
2020-08-11 10:22:57,795 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:22:57,797 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:22:57,800 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:22:57,836 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-08-11 10:22:57,838 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:22:57,839 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:22:57,840 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:22:57,840 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:22:57,841 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8082"]
2020-08-11 10:22:57,843 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8082"]
2020-08-11 10:22:57,851 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:22:57,854 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'taskScheduler'
2020-08-11 10:22:57,854 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-11 10:22:57,854 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2020-08-11 10:22:57,866 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2020-08-11 10:22:57,866 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2020-08-11 10:23:00,869 INFO com.netflix.discovery.DiscoveryClient [main] Unregistering ...
2020-08-11 10:23:00,874 INFO com.netflix.discovery.DiscoveryClient [main] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - deregister  status: 200
2020-08-11 10:23:00,882 INFO com.netflix.discovery.DiscoveryClient [main] Completed shut down of DiscoveryClient
2020-08-11 10:23:35,000 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 10:23:37,793 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 10:23:37,794 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 10:23:37,798 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 10:23:38,436 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:23:38,438 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 10:23:38,494 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 10:23:38,631 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 183ms. Found 5 JPA repository interfaces.
2020-08-11 10:23:38,652 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:23:38,652 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 10:23:38,669 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:23:38,670 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:23:38,670 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:23:38,671 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:23:38,672 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:23:38,684 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 31ms. Found 1 MongoDB repository interfaces.
2020-08-11 10:23:38,954 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 10:23:39,208 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5cff729b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:23:39,218 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:23:39,476 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 10:23:39,484 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:23:39,484 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 10:23:39,484 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 10:23:39,618 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 10:23:39,619 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1809 ms
2020-08-11 10:23:39,776 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 10:23:39,847 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 10:23:40,180 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 10:23:40,594 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 10:23:41,704 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 10:23:41,805 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 10:23:41,846 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 10:23:41,855 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 10:23:41,905 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 10:23:41,962 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 10:23:41,971 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 10:23:42,093 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 10:23:42,131 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 10:23:42,190 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32558e166d144cfdc61408', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:11}] to localhost:27017
2020-08-11 10:23:42,194 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32558e166d144cfdc61408', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3423400}
2020-08-11 10:23:42,210 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 10:23:42,236 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:23:42,324 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:23:43,208 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@68c3aa38, org.springframework.security.web.context.SecurityContextPersistenceFilter@506e382b, org.springframework.security.web.header.HeaderWriterFilter@36ec4071, org.springframework.web.filter.CorsFilter@1196537d, org.springframework.security.web.authentication.logout.LogoutFilter@7b44e98e, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@b5311cb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@170f0fd6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@34d0c331, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@267a8777, org.springframework.security.web.session.SessionManagementFilter@3d9cba2, org.springframework.security.web.access.ExceptionTranslationFilter@237bdbcb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@19834eb7]
2020-08-11 10:23:43,231 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:23:43,232 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:23:43,237 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:23:43,237 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:23:43,346 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 10:23:43,353 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:23:43,690 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 10:23:43,758 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 10:23:43,823 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 10:23:43,905 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 10:23:43,905 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 10:23:44,043 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 10:23:44,044 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 10:23:44,193 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 10:23:44,248 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 10:23:44,248 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 10:23:44,248 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 10:23:44,248 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 10:23:44,248 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 10:23:44,248 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 10:23:44,249 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 10:23:44,346 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 10:23:44,348 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 10:23:44,350 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 10:23:44,353 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597134224353 with initial instances count: 1
2020-08-11 10:23:44,356 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 10:23:44,357 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597134224357, current=UP, previous=STARTING]
2020-08-11 10:23:44,359 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:23:44,359 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 10:23:44,384 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:23:44,384 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 10:23:44,384 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 10:23:44,429 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 10:23:44,810 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 10:23:44,822 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 10.707 seconds (JVM running for 11.169)
2020-08-11 10:23:45,053 INFO pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart [main] Super admin created login: admin@admin.pl , password:  test
2020-08-11 10:24:21,856 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 10:24:23,157 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 10:24:23,158 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 10:24:23,162 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 10:24:23,800 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:24:23,802 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 10:24:23,853 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 10:24:23,994 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 184ms. Found 5 JPA repository interfaces.
2020-08-11 10:24:24,016 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:24:24,016 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 10:24:24,033 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:24:24,033 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:24:24,034 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:24:24,034 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:24:24,034 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:24:24,046 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 30ms. Found 1 MongoDB repository interfaces.
2020-08-11 10:24:24,317 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 10:24:24,570 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4f3356c0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:24:24,579 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:24:24,836 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 10:24:24,845 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:24:24,846 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 10:24:24,846 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 10:24:24,973 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 10:24:24,973 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1800 ms
2020-08-11 10:24:25,141 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 10:24:25,208 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 10:24:25,509 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 10:24:25,971 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 10:24:27,106 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 10:24:27,203 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 10:24:27,248 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 10:24:27,257 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 10:24:27,306 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 10:24:27,360 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 10:24:27,363 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 10:24:27,495 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 10:24:27,520 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 10:24:27,574 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f3255bbbe4d40343fcedffb', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:12}] to localhost:27017
2020-08-11 10:24:27,579 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f3255bbbe4d40343fcedffb', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4194700}
2020-08-11 10:24:27,605 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 10:24:27,616 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:24:27,702 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:24:28,558 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@68c3aa38, org.springframework.security.web.context.SecurityContextPersistenceFilter@544733a4, org.springframework.security.web.header.HeaderWriterFilter@61c0fb12, org.springframework.web.filter.CorsFilter@1196537d, org.springframework.security.web.authentication.logout.LogoutFilter@590f806a, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@59c38af5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@59700156, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6c167296, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@267a8777, org.springframework.security.web.session.SessionManagementFilter@68cc6319, org.springframework.security.web.access.ExceptionTranslationFilter@7ca0b05e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@19834eb7]
2020-08-11 10:24:28,579 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:24:28,579 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:24:28,583 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:24:28,584 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:24:28,680 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 10:24:28,688 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:24:29,040 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 10:24:29,100 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 10:24:29,165 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 10:24:29,243 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 10:24:29,243 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 10:24:29,369 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 10:24:29,370 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 10:24:29,510 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 10:24:29,566 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 10:24:29,567 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 10:24:29,567 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 10:24:29,567 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 10:24:29,567 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 10:24:29,567 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 10:24:29,567 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 10:24:29,668 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 10:24:29,670 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 10:24:29,671 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 10:24:29,674 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597134269673 with initial instances count: 2
2020-08-11 10:24:29,677 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 10:24:29,677 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597134269677, current=UP, previous=STARTING]
2020-08-11 10:24:29,679 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:24:29,679 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 10:24:29,703 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 10:24:29,704 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 10:24:29,704 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:24:29,748 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 10:24:30,134 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 10:24:30,144 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.181 seconds (JVM running for 9.624)
2020-08-11 10:24:30,388 INFO pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart [main] Super admin created login: admin@admin.pl , password:  test
2020-08-11 10:25:05,195 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 10:25:06,435 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 10:25:06,436 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 10:25:06,440 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 10:25:07,081 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:25:07,083 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 10:25:07,141 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 10:25:07,280 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 189ms. Found 5 JPA repository interfaces.
2020-08-11 10:25:07,301 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:25:07,301 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 10:25:07,319 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:25:07,319 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:25:07,320 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:25:07,320 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:25:07,321 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:25:07,332 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 30ms. Found 1 MongoDB repository interfaces.
2020-08-11 10:25:07,599 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 10:25:07,843 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3f6cce7f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:25:07,852 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:25:08,123 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 10:25:08,132 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:25:08,133 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 10:25:08,133 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 10:25:08,277 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 10:25:08,278 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1826 ms
2020-08-11 10:25:08,443 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 10:25:08,510 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 10:25:08,818 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 10:25:09,280 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 10:25:10,400 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 10:25:10,511 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 10:25:10,557 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 10:25:10,564 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 10:25:10,614 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 10:25:10,667 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 10:25:10,668 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 10:25:10,798 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 10:25:10,827 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 10:25:10,878 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f3255e6d300034b1e2bca0a', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:13}] to localhost:27017
2020-08-11 10:25:10,883 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f3255e6d300034b1e2bca0a', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3333300}
2020-08-11 10:25:10,919 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 10:25:10,924 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:25:11,010 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:25:11,966 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6bc8d8bd, org.springframework.security.web.context.SecurityContextPersistenceFilter@36dc6b9, org.springframework.security.web.header.HeaderWriterFilter@b0d4873, org.springframework.web.filter.CorsFilter@395c21ee, org.springframework.security.web.authentication.logout.LogoutFilter@16a15261, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@fe38c0e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3c981f76, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@11678469, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1e733bb5, org.springframework.security.web.session.SessionManagementFilter@5df7ae0a, org.springframework.security.web.access.ExceptionTranslationFilter@6a905513, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@58038583]
2020-08-11 10:25:11,987 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:25:11,988 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:25:11,994 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:25:11,994 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:25:12,092 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 10:25:12,100 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:25:12,464 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 10:25:12,526 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 10:25:12,593 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 10:25:12,674 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 10:25:12,674 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 10:25:12,797 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 10:25:12,797 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 10:25:12,948 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 10:25:13,005 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 10:25:13,005 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 10:25:13,005 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 10:25:13,005 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 10:25:13,005 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 10:25:13,005 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 10:25:13,006 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 10:25:13,111 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 10:25:13,114 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 10:25:13,116 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 10:25:13,119 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597134313118 with initial instances count: 2
2020-08-11 10:25:13,122 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 10:25:13,123 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597134313123, current=UP, previous=STARTING]
2020-08-11 10:25:13,124 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:25:13,125 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 10:25:13,151 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 10:25:13,151 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:25:13,151 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 10:25:13,197 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 10:25:13,596 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 10:25:13,606 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.3 seconds (JVM running for 9.761)
2020-08-11 10:25:13,826 INFO pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart [main] Super admin created login: admin@admin.pl , password: m/P%^j$%nYN\HK%fNid=^tGp<OuZZm8I-LC5eN&y
2020-08-11 10:27:43,788 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 10:27:43,788 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-2] Initializing Servlet 'dispatcherServlet'
2020-08-11 10:27:43,798 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-2] Completed initialization in 9 ms
2020-08-11 10:30:13,013 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-11 10:34:48,842 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 10:34:49,949 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 10:34:49,950 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 10:34:49,954 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 10:34:50,589 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:34:50,590 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 10:34:50,645 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 10:34:50,784 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 186ms. Found 5 JPA repository interfaces.
2020-08-11 10:34:50,804 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:34:50,805 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 10:34:50,822 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:34:50,823 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:34:50,823 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:34:50,823 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:34:50,824 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:34:50,836 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 31ms. Found 1 MongoDB repository interfaces.
2020-08-11 10:34:51,102 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 10:34:51,347 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6459f4ea' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:34:51,355 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:34:51,628 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 10:34:51,637 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:34:51,637 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 10:34:51,637 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 10:34:51,775 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 10:34:51,776 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1810 ms
2020-08-11 10:34:51,924 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 10:34:51,998 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 10:34:52,298 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 10:34:52,723 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 10:34:53,853 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 10:34:53,963 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 10:34:54,007 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 10:34:54,017 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 10:34:54,067 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 10:34:54,119 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 10:34:54,144 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 10:34:54,256 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 10:34:54,307 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 10:34:54,363 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32582e18fed5383abba189', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:14}] to localhost:27017
2020-08-11 10:34:54,368 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32582e18fed5383abba189', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4152200}
2020-08-11 10:34:54,373 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 10:34:54,410 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:34:54,498 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:34:55,407 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 10:34:55,416 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:34:55,424 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5746609e, org.springframework.security.web.context.SecurityContextPersistenceFilter@b0d4873, org.springframework.security.web.header.HeaderWriterFilter@5570ee6d, org.springframework.web.filter.CorsFilter@40da1644, org.springframework.security.web.authentication.logout.LogoutFilter@1104ad6a, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@2cbc2db2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6f00c40e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@17873842, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5980e29f, org.springframework.security.web.session.SessionManagementFilter@6a905513, org.springframework.security.web.access.ExceptionTranslationFilter@6ca97ddf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5b5f61cc]
2020-08-11 10:34:55,444 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:34:55,444 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:34:55,449 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:34:55,450 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:34:55,914 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 10:34:55,973 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 10:34:56,039 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 10:34:56,133 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 10:34:56,133 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 10:34:56,255 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 10:34:56,256 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 10:34:56,423 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 10:34:56,470 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 10:34:56,470 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 10:34:56,470 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 10:34:56,470 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 10:34:56,471 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 10:34:56,471 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 10:34:56,471 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 10:34:56,572 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 10:34:56,575 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 10:34:56,577 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 10:34:56,580 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597134896579 with initial instances count: 2
2020-08-11 10:34:56,583 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 10:34:56,584 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597134896584, current=UP, previous=STARTING]
2020-08-11 10:34:56,585 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:34:56,585 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 10:34:56,610 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 10:34:56,611 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 10:34:56,612 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:34:56,659 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 10:34:57,050 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 10:34:57,060 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.106 seconds (JVM running for 9.562)
2020-08-11 10:34:57,373 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:319)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:255)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:178)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy205.save(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createSuperAdminAfterStartup(CreateAfterAppStart.java:94)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createRoleAfterAppStartup(CreateAfterAppStart.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:305)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:190)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:153)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.boot.context.event.EventPublishingRunListener.running(EventPublishingRunListener.java:108)
	at org.springframework.boot.SpringApplicationRunListeners.running(SpringApplicationRunListeners.java:77)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at pl.com.ttsw.intership.wholesaleserverapp.WholesaleServerAppApplication.main(WholesaleServerAppApplication.java:21)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:120)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:113)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:742)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:710)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:525)
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:456)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:419)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:459)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:293)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:718)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:704)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:314)
	at com.sun.proxy.$Proxy197.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 34 common frames omitted
2020-08-11 10:34:57,375 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Unregistering application REST-SERVICE with eureka with status DOWN
2020-08-11 10:34:57,375 WARN com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597134897375, current=DOWN, previous=UP]
2020-08-11 10:34:57,375 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:34:57,378 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:34:57,380 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:34:57,413 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-08-11 10:34:57,415 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:34:57,416 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:34:57,417 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:34:57,417 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:34:57,418 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8082"]
2020-08-11 10:34:57,420 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8082"]
2020-08-11 10:34:57,426 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:34:57,428 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'taskScheduler'
2020-08-11 10:34:57,428 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-11 10:34:57,428 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2020-08-11 10:34:57,441 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2020-08-11 10:34:57,441 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2020-08-11 10:35:47,224 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 10:35:48,487 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 10:35:48,488 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 10:35:48,492 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 10:35:49,119 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:35:49,120 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 10:35:49,172 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 10:35:49,316 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 188ms. Found 5 JPA repository interfaces.
2020-08-11 10:35:49,338 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:35:49,338 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 10:35:49,356 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:35:49,356 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:35:49,357 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:35:49,357 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:35:49,358 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:35:49,371 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 32ms. Found 1 MongoDB repository interfaces.
2020-08-11 10:35:49,637 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 10:35:49,883 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@10b8b900' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:35:49,893 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:35:50,170 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 10:35:50,179 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:35:50,180 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 10:35:50,180 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 10:35:50,307 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 10:35:50,308 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1804 ms
2020-08-11 10:35:50,471 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 10:35:50,537 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 10:35:50,846 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 10:35:51,270 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 10:35:52,519 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 10:35:52,602 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 10:35:52,646 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 10:35:52,655 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 10:35:52,704 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 10:35:52,756 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 10:35:52,760 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 10:35:52,891 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 10:35:52,921 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 10:35:52,977 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f325868000f1e6f28049b75', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:15}] to localhost:27017
2020-08-11 10:35:52,982 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f325868000f1e6f28049b75', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3490500}
2020-08-11 10:35:53,004 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 10:35:53,018 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:35:53,107 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:35:54,076 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1f207142, org.springframework.security.web.context.SecurityContextPersistenceFilter@530bd77b, org.springframework.security.web.header.HeaderWriterFilter@6c92a59d, org.springframework.web.filter.CorsFilter@65871cfd, org.springframework.security.web.authentication.logout.LogoutFilter@594fcb22, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@5c7e55a4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7657d29f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@67683210, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@723f8990, org.springframework.security.web.session.SessionManagementFilter@63a9af28, org.springframework.security.web.access.ExceptionTranslationFilter@6cac0334, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@df34b01]
2020-08-11 10:35:54,098 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:35:54,098 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:35:54,103 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:35:54,103 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:35:54,104 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 10:35:54,112 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:35:54,569 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 10:35:54,631 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 10:35:54,698 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 10:35:54,779 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 10:35:54,779 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 10:35:54,911 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 10:35:54,912 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 10:35:55,055 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 10:35:55,108 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 10:35:55,108 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 10:35:55,108 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 10:35:55,108 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 10:35:55,109 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 10:35:55,109 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 10:35:55,109 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 10:35:55,208 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 10:35:55,210 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 10:35:55,212 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 10:35:55,215 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597134955214 with initial instances count: 2
2020-08-11 10:35:55,218 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 10:35:55,219 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597134955219, current=UP, previous=STARTING]
2020-08-11 10:35:55,220 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:35:55,221 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 10:35:55,245 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 10:35:55,245 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:35:55,246 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 10:35:55,290 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 10:35:55,681 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 10:35:55,690 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.375 seconds (JVM running for 9.832)
2020-08-11 10:35:56,005 INFO pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart [main] Super admin created login: admin@admin.pl , password: g5>2bVf-P0yi7bi2<V8p!g>G,_p6>;9i@Ag$R$R1
2020-08-11 10:36:20,866 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 10:36:22,095 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 10:36:22,096 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 10:36:22,101 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 10:36:22,782 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:36:22,784 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 10:36:22,841 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 10:36:22,982 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 190ms. Found 5 JPA repository interfaces.
2020-08-11 10:36:23,006 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:36:23,006 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 10:36:23,023 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:36:23,024 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:36:23,024 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:36:23,024 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:36:23,025 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:36:23,038 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 31ms. Found 1 MongoDB repository interfaces.
2020-08-11 10:36:23,320 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 10:36:23,572 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@10d18696' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:36:23,583 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:36:23,868 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 10:36:23,878 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:36:23,878 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 10:36:23,878 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 10:36:24,034 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 10:36:24,034 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1922 ms
2020-08-11 10:36:24,203 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 10:36:24,270 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 10:36:24,585 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 10:36:25,015 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 10:36:26,174 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 10:36:26,252 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 10:36:26,299 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 10:36:26,308 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 10:36:26,359 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 10:36:26,415 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 10:36:26,420 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 10:36:26,555 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 10:36:26,581 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 10:36:26,634 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32588aadae870c6d49aeff', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:16}] to localhost:27017
2020-08-11 10:36:26,640 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32588aadae870c6d49aeff', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4006800}
2020-08-11 10:36:26,670 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 10:36:26,683 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:36:26,775 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:36:27,672 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@332610ad, org.springframework.security.web.context.SecurityContextPersistenceFilter@6eb332d1, org.springframework.security.web.header.HeaderWriterFilter@16a15261, org.springframework.web.filter.CorsFilter@45bbb3e8, org.springframework.security.web.authentication.logout.LogoutFilter@90c01ab, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@65021bb4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3958db82, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@467421cc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@795e8ef5, org.springframework.security.web.session.SessionManagementFilter@695c8b32, org.springframework.security.web.access.ExceptionTranslationFilter@5b160208, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3a286095]
2020-08-11 10:36:27,695 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:36:27,695 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:36:27,700 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:36:27,700 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:36:27,796 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 10:36:27,804 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:36:28,152 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 10:36:28,213 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 10:36:28,278 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 10:36:28,358 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 10:36:28,359 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 10:36:28,490 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 10:36:28,490 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 10:36:28,631 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 10:36:28,688 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 10:36:28,688 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 10:36:28,688 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 10:36:28,688 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 10:36:28,688 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 10:36:28,689 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 10:36:28,689 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 10:36:28,802 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 10:36:28,805 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 10:36:28,807 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 10:36:28,810 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597134988809 with initial instances count: 2
2020-08-11 10:36:28,813 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 10:36:28,814 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597134988814, current=UP, previous=STARTING]
2020-08-11 10:36:28,815 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:36:28,815 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 10:36:28,842 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 10:36:28,842 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 10:36:28,844 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:36:28,890 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 10:36:29,286 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 10:36:29,296 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.422 seconds (JVM running for 9.997)
2020-08-11 10:36:29,605 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:319)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:255)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:178)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy204.save(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createSuperAdminAfterStartup(CreateAfterAppStart.java:96)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createRoleAfterAppStartup(CreateAfterAppStart.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:305)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:190)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:153)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.boot.context.event.EventPublishingRunListener.running(EventPublishingRunListener.java:108)
	at org.springframework.boot.SpringApplicationRunListeners.running(SpringApplicationRunListeners.java:77)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at pl.com.ttsw.intership.wholesaleserverapp.WholesaleServerAppApplication.main(WholesaleServerAppApplication.java:21)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:120)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:113)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:742)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:710)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:525)
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:456)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:419)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:459)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:293)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:718)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:704)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:314)
	at com.sun.proxy.$Proxy197.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 34 common frames omitted
2020-08-11 10:36:29,606 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Unregistering application REST-SERVICE with eureka with status DOWN
2020-08-11 10:36:29,606 WARN com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597134989606, current=DOWN, previous=UP]
2020-08-11 10:36:29,606 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:36:29,608 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:36:29,610 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:36:29,647 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-08-11 10:36:29,649 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:36:29,650 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:36:29,651 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:36:29,651 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:36:29,652 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8082"]
2020-08-11 10:36:29,655 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8082"]
2020-08-11 10:36:29,661 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:36:29,663 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'taskScheduler'
2020-08-11 10:36:29,664 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-11 10:36:29,664 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2020-08-11 10:36:29,676 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2020-08-11 10:36:29,676 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2020-08-11 10:36:32,681 INFO com.netflix.discovery.DiscoveryClient [main] Unregistering ...
2020-08-11 10:36:32,691 INFO com.netflix.discovery.DiscoveryClient [main] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - deregister  status: 200
2020-08-11 10:36:32,707 INFO com.netflix.discovery.DiscoveryClient [main] Completed shut down of DiscoveryClient
2020-08-11 10:43:29,796 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 10:43:44,564 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 10:43:45,792 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 10:43:45,792 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 10:43:45,796 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 10:43:46,436 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:43:46,438 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 10:43:46,490 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 10:43:46,640 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 195ms. Found 5 JPA repository interfaces.
2020-08-11 10:43:46,660 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:43:46,660 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 10:43:46,678 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:43:46,678 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:43:46,679 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:43:46,679 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:43:46,679 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:43:46,692 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 30ms. Found 1 MongoDB repository interfaces.
2020-08-11 10:43:46,962 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 10:43:47,225 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5b48f0f4' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:43:47,234 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:43:47,504 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 10:43:47,513 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:43:47,514 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 10:43:47,514 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 10:43:47,667 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 10:43:47,667 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1859 ms
2020-08-11 10:43:47,831 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 10:43:47,899 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 10:43:48,226 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 10:43:48,689 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 10:43:49,841 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 10:43:49,959 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 10:43:50,007 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 10:43:50,017 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 10:43:50,072 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 10:43:50,126 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 10:43:50,128 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 10:43:50,260 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 10:43:50,295 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 10:43:50,353 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f325a466ca839602cbd016a', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:17}] to localhost:27017
2020-08-11 10:43:50,360 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f325a466ca839602cbd016a', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4657600}
2020-08-11 10:43:50,387 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 10:43:50,400 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:43:50,493 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:43:51,532 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@9e4388d, org.springframework.security.web.context.SecurityContextPersistenceFilter@729d1428, org.springframework.security.web.header.HeaderWriterFilter@5d24703e, org.springframework.web.filter.CorsFilter@28532753, org.springframework.security.web.authentication.logout.LogoutFilter@49e92724, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@1734b1a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1728d307, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7a79d99c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@21399e53, org.springframework.security.web.session.SessionManagementFilter@1be3a294, org.springframework.security.web.access.ExceptionTranslationFilter@7878459f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4fae4c3b]
2020-08-11 10:43:51,555 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:43:51,555 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:43:51,560 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:43:51,561 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:43:51,606 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 10:43:51,613 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:43:52,046 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 10:43:52,110 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 10:43:52,177 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 10:43:52,264 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 10:43:52,264 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 10:43:52,393 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 10:43:52,394 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 10:43:52,537 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 10:43:52,598 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 10:43:52,599 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 10:43:52,599 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 10:43:52,599 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 10:43:52,599 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 10:43:52,599 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 10:43:52,600 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 10:43:52,715 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 10:43:52,717 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 10:43:52,720 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 10:43:52,723 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597135432722 with initial instances count: 1
2020-08-11 10:43:52,727 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 10:43:52,727 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597135432727, current=UP, previous=STARTING]
2020-08-11 10:43:52,729 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:43:52,729 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 10:43:52,758 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 10:43:52,758 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:43:52,759 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 10:43:52,817 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 10:43:53,246 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 10:43:53,257 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.602 seconds (JVM running for 10.066)
2020-08-11 10:43:53,515 INFO pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart [main] Super admin created login: admin@admin.pl , password: JuCU95P`)dc0-68']!CpamVIo@C$\)As6qqEC&u^
2020-08-11 10:43:57,127 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 10:43:57,128 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-1] Initializing Servlet 'dispatcherServlet'
2020-08-11 10:43:57,138 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-1] Completed initialization in 10 ms
2020-08-11 10:45:42,294 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 10:45:43,504 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 10:45:43,505 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 10:45:43,509 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 10:45:44,173 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:45:44,176 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 10:45:44,234 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 10:45:44,380 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 196ms. Found 5 JPA repository interfaces.
2020-08-11 10:45:44,403 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:45:44,403 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 10:45:44,420 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:45:44,420 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:45:44,421 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:45:44,421 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:45:44,421 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 10:45:44,433 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 29ms. Found 1 MongoDB repository interfaces.
2020-08-11 10:45:44,701 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 10:45:44,957 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@756808cc' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:45:44,965 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:45:45,245 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 10:45:45,255 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:45:45,255 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 10:45:45,255 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 10:45:45,413 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 10:45:45,413 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1893 ms
2020-08-11 10:45:45,579 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 10:45:45,648 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 10:45:45,962 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 10:45:46,404 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 10:45:47,550 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 10:45:47,640 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 10:45:47,689 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 10:45:47,697 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 10:45:47,755 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 10:45:47,808 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 10:45:47,825 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 10:45:47,942 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 10:45:47,994 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 10:45:48,056 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f325abb6cc7bb03101fc680', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:18}] to localhost:27017
2020-08-11 10:45:48,062 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f325abb6cc7bb03101fc680', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4075400}
2020-08-11 10:45:48,081 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 10:45:48,106 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:45:48,202 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 10:45:49,106 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6d6ddeb5, org.springframework.security.web.context.SecurityContextPersistenceFilter@532e00bd, org.springframework.security.web.header.HeaderWriterFilter@32eb38e5, org.springframework.web.filter.CorsFilter@3e574f9c, org.springframework.security.web.authentication.logout.LogoutFilter@5c9168c3, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@4fbbd98c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@47fbf95e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6413eeb7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5cfa9e8a, org.springframework.security.web.session.SessionManagementFilter@49e92724, org.springframework.security.web.access.ExceptionTranslationFilter@206e5183, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@79e28671]
2020-08-11 10:45:49,129 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:45:49,129 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:45:49,135 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 10:45:49,136 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 10:45:49,197 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 10:45:49,206 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:45:49,609 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 10:45:49,671 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 10:45:49,737 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 10:45:49,823 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 10:45:49,823 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 10:45:49,955 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 10:45:49,956 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 10:45:50,089 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 10:45:50,147 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 10:45:50,147 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 10:45:50,147 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 10:45:50,147 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 10:45:50,148 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 10:45:50,148 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 10:45:50,148 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 10:45:50,257 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 10:45:50,259 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 10:45:50,261 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 10:45:50,264 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597135550263 with initial instances count: 2
2020-08-11 10:45:50,267 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 10:45:50,267 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597135550267, current=UP, previous=STARTING]
2020-08-11 10:45:50,269 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:45:50,269 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 10:45:50,295 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 10:45:50,296 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 10:45:50,298 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:45:50,345 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 10:45:50,735 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 10:45:50,745 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.365 seconds (JVM running for 9.86)
2020-08-11 10:45:51,066 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:319)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:255)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:178)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy205.save(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createSuperAdminAfterStartup(CreateAfterAppStart.java:98)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createRoleAfterAppStartup(CreateAfterAppStart.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:305)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:190)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:153)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.boot.context.event.EventPublishingRunListener.running(EventPublishingRunListener.java:108)
	at org.springframework.boot.SpringApplicationRunListeners.running(SpringApplicationRunListeners.java:77)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at pl.com.ttsw.intership.wholesaleserverapp.WholesaleServerAppApplication.main(WholesaleServerAppApplication.java:21)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:120)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:113)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:742)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:710)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:525)
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:456)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:419)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:459)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:293)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:718)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:704)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:314)
	at com.sun.proxy.$Proxy197.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 34 common frames omitted
2020-08-11 10:45:51,068 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Unregistering application REST-SERVICE with eureka with status DOWN
2020-08-11 10:45:51,068 WARN com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597135551068, current=DOWN, previous=UP]
2020-08-11 10:45:51,068 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 10:45:51,071 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8082"]
2020-08-11 10:45:51,074 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 10:45:51,104 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-08-11 10:45:51,107 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:45:51,108 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:45:51,108 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:45:51,109 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 10:45:51,109 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8082"]
2020-08-11 10:45:51,112 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8082"]
2020-08-11 10:45:51,119 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 10:45:51,120 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'taskScheduler'
2020-08-11 10:45:51,121 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-11 10:45:51,121 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2020-08-11 10:45:51,135 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2020-08-11 10:45:51,136 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2020-08-11 10:45:54,138 INFO com.netflix.discovery.DiscoveryClient [main] Unregistering ...
2020-08-11 10:45:54,143 INFO com.netflix.discovery.DiscoveryClient [main] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - deregister  status: 200
2020-08-11 10:45:54,153 INFO com.netflix.discovery.DiscoveryClient [main] Completed shut down of DiscoveryClient
2020-08-11 11:19:28,503 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 11:19:29,729 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 11:19:29,730 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 11:19:29,734 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 11:19:30,387 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 11:19:30,389 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 11:19:30,440 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 11:19:30,579 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 182ms. Found 5 JPA repository interfaces.
2020-08-11 11:19:30,599 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 11:19:30,600 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 11:19:30,616 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 11:19:30,617 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 11:19:30,617 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 11:19:30,618 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 11:19:30,618 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 11:19:30,630 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 31ms. Found 1 MongoDB repository interfaces.
2020-08-11 11:19:30,890 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 11:19:31,137 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@28b8f98a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:19:31,145 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:19:31,413 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 11:19:31,422 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 11:19:31,423 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 11:19:31,423 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 11:19:31,566 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 11:19:31,566 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1821 ms
2020-08-11 11:19:31,717 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 11:19:31,787 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 11:19:32,113 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 11:19:32,543 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 11:19:33,812 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 11:19:33,889 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 11:19:33,932 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 11:19:33,942 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 11:19:33,996 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 11:19:34,056 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 11:19:34,076 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 11:19:34,181 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 11:19:34,238 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 11:19:34,295 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f3262a6fabf125427355210', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:19}] to localhost:27017
2020-08-11 11:19:34,299 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f3262a6fabf125427355210', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3225200}
2020-08-11 11:19:34,305 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 11:19:34,342 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 11:19:34,425 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 11:19:35,314 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5af7e2f, org.springframework.security.web.context.SecurityContextPersistenceFilter@1256925b, org.springframework.security.web.header.HeaderWriterFilter@5afa0b1a, org.springframework.web.filter.CorsFilter@2df24f19, org.springframework.security.web.authentication.logout.LogoutFilter@769a9b7a, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@7c9512c6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@467421cc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4629dde5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@c76762, org.springframework.security.web.session.SessionManagementFilter@577f81a0, org.springframework.security.web.access.ExceptionTranslationFilter@1e6e29d6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@175c26ff]
2020-08-11 11:19:35,334 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 11:19:35,334 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 11:19:35,340 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 11:19:35,340 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 11:19:35,743 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 11:19:35,750 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 11:19:35,795 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 11:19:35,854 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 11:19:35,921 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 11:19:36,008 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 11:19:36,008 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 11:19:36,140 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 11:19:36,140 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 11:19:36,265 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 11:19:36,321 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 11:19:36,321 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 11:19:36,321 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 11:19:36,322 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 11:19:36,322 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 11:19:36,322 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 11:19:36,322 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 11:19:36,421 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 11:19:36,423 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 11:19:36,425 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 11:19:36,428 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597137576427 with initial instances count: 1
2020-08-11 11:19:36,431 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 11:19:36,432 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597137576432, current=UP, previous=STARTING]
2020-08-11 11:19:36,433 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 11:19:36,433 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 11:19:36,458 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 11:19:36,459 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 11:19:36,459 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 11:19:36,504 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 11:19:36,893 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 11:19:36,903 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.321 seconds (JVM running for 9.79)
2020-08-11 11:19:37,230 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:319)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:255)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:178)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy203.save(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createSuperAdminAfterStartup(CreateAfterAppStart.java:99)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createRoleAfterAppStartup(CreateAfterAppStart.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:305)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:190)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:153)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.boot.context.event.EventPublishingRunListener.running(EventPublishingRunListener.java:108)
	at org.springframework.boot.SpringApplicationRunListeners.running(SpringApplicationRunListeners.java:77)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at pl.com.ttsw.intership.wholesaleserverapp.WholesaleServerAppApplication.main(WholesaleServerAppApplication.java:21)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:120)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:113)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:742)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:710)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:525)
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:456)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:419)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:459)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:293)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:718)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:704)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:314)
	at com.sun.proxy.$Proxy197.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 34 common frames omitted
2020-08-11 11:19:37,231 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Unregistering application REST-SERVICE with eureka with status DOWN
2020-08-11 11:19:37,231 WARN com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597137577231, current=DOWN, previous=UP]
2020-08-11 11:19:37,232 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 11:19:37,234 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8082"]
2020-08-11 11:19:37,237 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 11:19:37,268 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-08-11 11:19:37,270 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 11:19:37,271 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 11:19:37,272 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 11:19:37,272 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-11 11:19:37,273 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8082"]
2020-08-11 11:19:37,275 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8082"]
2020-08-11 11:19:37,281 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 11:19:37,283 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'taskScheduler'
2020-08-11 11:19:37,283 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-11 11:19:37,283 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2020-08-11 11:19:37,295 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2020-08-11 11:19:37,296 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2020-08-11 11:19:40,298 INFO com.netflix.discovery.DiscoveryClient [main] Unregistering ...
2020-08-11 11:19:40,303 INFO com.netflix.discovery.DiscoveryClient [main] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - deregister  status: 200
2020-08-11 11:19:40,313 INFO com.netflix.discovery.DiscoveryClient [main] Completed shut down of DiscoveryClient
2020-08-11 11:22:58,941 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 11:22:59,994 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 11:22:59,995 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 11:22:59,999 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 11:23:00,671 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 11:23:00,673 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 11:23:00,727 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 11:23:00,875 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 193ms. Found 5 JPA repository interfaces.
2020-08-11 11:23:00,901 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 11:23:00,902 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 11:23:00,921 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 11:23:00,921 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 11:23:00,922 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 11:23:00,922 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 11:23:00,923 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 11:23:00,937 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 34ms. Found 1 MongoDB repository interfaces.
2020-08-11 11:23:01,225 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 11:23:01,454 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@27ec8754' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:23:01,463 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:23:01,723 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 11:23:01,732 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 11:23:01,732 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 11:23:01,732 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 11:23:01,876 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 11:23:01,877 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1865 ms
2020-08-11 11:23:02,022 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 11:23:02,088 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 11:23:02,404 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 11:23:02,824 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 11:23:03,984 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 11:23:04,069 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 11:23:04,113 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 11:23:04,123 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 11:23:04,174 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 11:23:04,228 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 11:23:04,243 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 11:23:04,364 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 11:23:04,407 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 11:23:04,463 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f326378cd83ed608f6443e6', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:20}] to localhost:27017
2020-08-11 11:23:04,469 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f326378cd83ed608f6443e6', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3794900}
2020-08-11 11:23:04,483 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 11:23:04,505 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 11:23:04,590 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 11:23:05,536 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@20e9b10b, org.springframework.security.web.context.SecurityContextPersistenceFilter@231c521e, org.springframework.security.web.header.HeaderWriterFilter@dd3e1e3, org.springframework.web.filter.CorsFilter@2c485b3a, org.springframework.security.web.authentication.logout.LogoutFilter@6c68f29c, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@11d422fd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1be3a294, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@252d2ac0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4a00d591, org.springframework.security.web.session.SessionManagementFilter@7d49fe37, org.springframework.security.web.access.ExceptionTranslationFilter@39acf187, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5f32de90]
2020-08-11 11:23:05,560 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 11:23:05,560 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 11:23:05,565 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 11:23:05,566 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 11:23:05,566 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 11:23:05,574 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 11:23:06,056 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 11:23:06,115 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 11:23:06,181 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 11:23:06,265 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 11:23:06,265 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 11:23:06,399 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 11:23:06,399 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 11:23:06,561 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 11:23:06,607 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 11:23:06,607 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 11:23:06,607 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 11:23:06,607 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 11:23:06,608 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 11:23:06,608 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 11:23:06,608 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 11:23:06,703 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 11:23:06,705 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 11:23:06,707 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 11:23:06,710 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597137786709 with initial instances count: 1
2020-08-11 11:23:06,713 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 11:23:06,714 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597137786714, current=UP, previous=STARTING]
2020-08-11 11:23:06,715 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 11:23:06,715 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 11:23:06,741 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 11:23:06,742 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 11:23:06,742 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 11:23:06,787 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 11:23:07,178 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 11:23:07,188 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.171 seconds (JVM running for 9.636)
2020-08-11 11:23:07,523 INFO pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart [main] Super admin created login: admin@admin.pl , password: 2Q8;e,cJ`$bGEctd'i?U(rz/-18*0AS].u@.&Pwg
2020-08-11 11:28:06,612 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-11 11:33:06,618 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-11 11:37:17,649 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 11:37:17,650 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-2] Initializing Servlet 'dispatcherServlet'
2020-08-11 11:37:17,658 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-2] Completed initialization in 8 ms
2020-08-11 11:38:06,623 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-11 11:38:18,599 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 11:38:19,865 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 11:38:19,866 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 11:38:19,870 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 11:38:20,496 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 11:38:20,498 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 11:38:20,548 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 11:38:20,680 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 175ms. Found 5 JPA repository interfaces.
2020-08-11 11:38:20,699 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 11:38:20,700 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 11:38:20,716 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 11:38:20,717 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 11:38:20,717 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 11:38:20,717 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 11:38:20,718 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 11:38:20,729 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 29ms. Found 1 MongoDB repository interfaces.
2020-08-11 11:38:20,978 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 11:38:21,222 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@353c6da1' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:38:21,231 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:38:21,498 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 11:38:21,507 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 11:38:21,508 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 11:38:21,508 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 11:38:21,643 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 11:38:21,644 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1763 ms
2020-08-11 11:38:21,781 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 11:38:21,846 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 11:38:22,151 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 11:38:22,565 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 11:38:23,701 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 11:38:23,798 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 11:38:23,844 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 11:38:23,853 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 11:38:23,906 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 11:38:23,961 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 11:38:23,981 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 11:38:24,099 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 11:38:24,146 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 11:38:24,202 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f326710ea4fe140a23b739d', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:21}] to localhost:27017
2020-08-11 11:38:24,206 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f326710ea4fe140a23b739d', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3485400}
2020-08-11 11:38:24,217 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 11:38:24,250 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 11:38:24,340 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 11:38:25,128 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5318731f, org.springframework.security.web.context.SecurityContextPersistenceFilter@28521ed5, org.springframework.security.web.header.HeaderWriterFilter@5a464be7, org.springframework.web.filter.CorsFilter@2db82155, org.springframework.security.web.authentication.logout.LogoutFilter@2487b621, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@284b487f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4c9bed65, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@789f5552, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@128d397c, org.springframework.security.web.session.SessionManagementFilter@467421cc, org.springframework.security.web.access.ExceptionTranslationFilter@6c167296, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@332610ad]
2020-08-11 11:38:25,147 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 11:38:25,148 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 11:38:25,153 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 11:38:25,153 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 11:38:25,271 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 11:38:25,278 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 11:38:25,596 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 11:38:25,662 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 11:38:25,729 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 11:38:25,809 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 11:38:25,810 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 11:38:25,945 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 11:38:25,946 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 11:38:26,104 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 11:38:26,163 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 11:38:26,163 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 11:38:26,164 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 11:38:26,164 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 11:38:26,164 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 11:38:26,164 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 11:38:26,164 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 11:38:26,266 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 11:38:26,268 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 11:38:26,270 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 11:38:26,273 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597138706272 with initial instances count: 2
2020-08-11 11:38:26,276 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 11:38:26,277 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597138706277, current=UP, previous=STARTING]
2020-08-11 11:38:26,278 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 11:38:26,279 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 11:38:26,304 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 11:38:26,304 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 11:38:26,304 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 11:38:26,351 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 11:38:26,740 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 11:38:26,750 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.12 seconds (JVM running for 9.57)
2020-08-11 11:40:05,467 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-11 11:40:06,685 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=1888972c26b09545fde03e2d5e4bc17b32c2fea3, state=null
2020-08-11 11:40:06,686 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-11 11:40:06,690 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-11 11:40:07,320 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 11:40:07,322 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-11 11:40:07,371 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-11 11:40:07,507 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 178ms. Found 5 JPA repository interfaces.
2020-08-11 11:40:07,530 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 11:40:07,530 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 11:40:07,547 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 11:40:07,547 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 11:40:07,548 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 11:40:07,548 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 11:40:07,548 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-11 11:40:07,560 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 30ms. Found 1 MongoDB repository interfaces.
2020-08-11 11:40:07,819 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=6c8e3c16-916b-3121-86c1-4660876c4c9a
2020-08-11 11:40:08,078 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@32ae8f27' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:40:08,086 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:40:08,371 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-11 11:40:08,379 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-11 11:40:08,380 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-11 11:40:08,380 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-11 11:40:08,505 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-11 11:40:08,505 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1804 ms
2020-08-11 11:40:08,651 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-11 11:40:08,715 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-11 11:40:09,032 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-11 11:40:09,544 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-11 11:40:10,491 INFO liquibase.logging.core.JavaLogger [main] Creating database history table with name: wholesale.databasechangelog
2020-08-11 11:40:10,534 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-11 11:40:10,642 INFO liquibase.logging.core.JavaLogger [main] Table users created
2020-08-11 11:40:10,656 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::1::artur ran successfully in 33ms
2020-08-11 11:40:10,718 INFO liquibase.logging.core.JavaLogger [main] Table roles created
2020-08-11 11:40:10,734 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::2::artur ran successfully in 32ms
2020-08-11 11:40:10,780 INFO liquibase.logging.core.JavaLogger [main] Table users_roles created
2020-08-11 11:40:10,793 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::3::artur ran successfully in 29ms
2020-08-11 11:40:10,839 INFO liquibase.logging.core.JavaLogger [main] Table basket_items created
2020-08-11 11:40:10,853 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::4::artur ran successfully in 31ms
2020-08-11 11:40:10,896 INFO liquibase.logging.core.JavaLogger [main] Table orders created
2020-08-11 11:40:10,910 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::5::artur ran successfully in 30ms
2020-08-11 11:40:10,955 INFO liquibase.logging.core.JavaLogger [main] Table warehouses created
2020-08-11 11:40:10,969 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::6::artur ran successfully in 31ms
2020-08-11 11:40:11,017 INFO liquibase.logging.core.JavaLogger [main] Table invoicepdf created
2020-08-11 11:40:11,033 INFO liquibase.logging.core.JavaLogger [main] Table orderpdf created
2020-08-11 11:40:11,048 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::7::marcin ran successfully in 52ms
2020-08-11 11:40:11,091 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to users_roles (role_id)
2020-08-11 11:40:11,104 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::7::artur ran successfully in 29ms
2020-08-11 11:40:11,146 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to users_roles (user_id)
2020-08-11 11:40:11,160 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::8::artur ran successfully in 28ms
2020-08-11 11:40:11,202 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to orders (warehouse_id)
2020-08-11 11:40:11,216 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::9::artur ran successfully in 27ms
2020-08-11 11:40:11,257 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to basket_items (order_id)
2020-08-11 11:40:11,270 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::10::artur ran successfully in 27ms
2020-08-11 11:40:11,313 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to orders (user_id)
2020-08-11 11:40:11,326 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::11::artur ran successfully in 28ms
2020-08-11 11:40:11,367 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to warehouses (user_id)
2020-08-11 11:40:11,381 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::12::artur ran successfully in 27ms
2020-08-11 11:40:11,435 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-11 11:40:11,487 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-11 11:40:11,498 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-11 11:40:11,556 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-11 11:40:11,619 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-11 11:40:11,637 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-11 11:40:11,760 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-11 11:40:11,805 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-11 11:40:11,859 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32677bee5ea312d6467ea0', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:22}] to localhost:27017
2020-08-11 11:40:11,864 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f32677bee5ea312d6467ea0', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3466100}
2020-08-11 11:40:11,872 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-11 11:40:11,903 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 11:40:11,998 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 11:40:12,991 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4769e70c, org.springframework.security.web.context.SecurityContextPersistenceFilter@4c678a1f, org.springframework.security.web.header.HeaderWriterFilter@956cf3d, org.springframework.web.filter.CorsFilter@69346100, org.springframework.security.web.authentication.logout.LogoutFilter@80b6098, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@90394d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6046fba0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5b49b1df, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@16a14076, org.springframework.security.web.session.SessionManagementFilter@11fa11b2, org.springframework.security.web.access.ExceptionTranslationFilter@6ce8bf64, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@d164938]
2020-08-11 11:40:13,012 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 11:40:13,012 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 11:40:13,019 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-11 11:40:13,019 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-11 11:40:13,041 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-11 11:40:13,049 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-11 11:40:13,476 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-11 11:40:13,538 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-11 11:40:13,617 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-11 11:40:13,701 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-11 11:40:13,701 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-11 11:40:13,824 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-11 11:40:13,824 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-11 11:40:13,962 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-11 11:40:14,018 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-11 11:40:14,019 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-11 11:40:14,019 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-11 11:40:14,019 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-11 11:40:14,019 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-11 11:40:14,019 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-11 11:40:14,019 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-11 11:40:14,118 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-11 11:40:14,120 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-11 11:40:14,122 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-11 11:40:14,126 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597138814125 with initial instances count: 2
2020-08-11 11:40:14,129 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-11 11:40:14,129 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597138814129, current=UP, previous=STARTING]
2020-08-11 11:40:14,131 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-11 11:40:14,131 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-11 11:40:14,158 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-11 11:40:14,158 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-11 11:40:14,158 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-11 11:40:14,207 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-11 11:40:14,593 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-11 11:40:14,603 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 10.101 seconds (JVM running for 10.551)
2020-08-11 11:40:14,743 INFO pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart [main] USER ROLE ADDED
2020-08-11 11:40:14,771 INFO pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart [main] ADMIN ROLE ADDED
2020-08-11 11:40:14,966 INFO pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart [main] Super admin created login: admin@admin.pl , password: Fxs>SUb7dnZ:/VmH:k9#M4S-]9AECHOP$F)X.:+t
2020-08-11 11:45:14,024 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-11 11:50:14,028 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-11 11:55:14,031 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-12 13:37:26,580 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-12 13:37:29,868 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=b76aeffc6abd596148602280de702414e1c693e2, state=null
2020-08-12 13:37:29,869 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-12 13:37:29,875 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-12 13:37:30,574 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-12 13:37:30,576 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-12 13:37:30,735 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-12 13:37:30,777 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 193ms. Found 7 JPA repository interfaces.
2020-08-12 13:37:30,799 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-12 13:37:30,799 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-12 13:37:30,818 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.kafka.repository.PdfInvoiceRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:37:30,818 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.kafka.repository.PdfOrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:37:30,820 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:37:30,821 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:37:30,821 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:37:30,822 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:37:30,822 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:37:30,836 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 37ms. Found 1 MongoDB repository interfaces.
2020-08-12 13:37:31,091 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=47073573-bdde-33a6-82c8-86665d519b49
2020-08-12 13:37:31,328 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@36c07c75' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-12 13:37:31,340 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-12 13:37:31,600 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-12 13:37:31,609 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-12 13:37:31,609 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-12 13:37:31,609 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-12 13:37:31,745 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-12 13:37:31,745 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1856 ms
2020-08-12 13:37:31,908 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-12 13:37:31,973 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-12 13:37:32,280 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-12 13:37:32,688 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-12 13:37:33,817 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-12 13:37:33,922 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-12 13:37:33,980 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-12 13:37:33,988 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-12 13:37:34,042 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-12 13:37:34,103 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-12 13:37:34,109 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-12 13:37:34,226 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-12 13:37:34,255 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[192.168.169.68:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-12 13:37:34,333 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f33d47ee1f02e5181506ecb', description='null'}-192.168.169.68:27017] Opened connection [connectionId{localValue:1, serverValue:21}] to 192.168.169.68:27017
2020-08-12 13:37:34,341 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-12 13:37:34,353 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f33d47ee1f02e5181506ecb', description='null'}-192.168.169.68:27017] Monitor thread successfully connected to server with description ServerDescription{address=192.168.169.68:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18049700}
2020-08-12 13:37:34,355 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-12 13:37:34,438 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-12 13:37:35,275 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@192aeae2, org.springframework.security.web.context.SecurityContextPersistenceFilter@690e7b89, org.springframework.security.web.header.HeaderWriterFilter@b307030, org.springframework.web.filter.CorsFilter@4ee1c29a, org.springframework.security.web.authentication.logout.LogoutFilter@73633230, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@6765b6a2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@518b0c12, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@231c521e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@28d1b2f, org.springframework.security.web.session.SessionManagementFilter@4ef10d3b, org.springframework.security.web.access.ExceptionTranslationFilter@504b4a97, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@578781f7]
2020-08-12 13:37:35,296 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-12 13:37:35,296 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-12 13:37:35,302 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-12 13:37:35,302 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-12 13:37:35,756 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-12 13:37:35,815 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-12 13:37:35,886 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-12 13:37:35,970 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-12 13:37:35,971 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-12 13:37:36,102 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-12 13:37:36,102 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-12 13:37:36,245 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-12 13:37:36,290 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-12 13:37:36,290 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-12 13:37:36,290 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-12 13:37:36,290 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-12 13:37:36,290 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-12 13:37:36,290 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-12 13:37:36,291 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-12 13:37:36,386 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-12 13:37:36,388 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-12 13:37:36,390 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-12 13:37:36,393 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597232256392 with initial instances count: 3
2020-08-12 13:37:36,396 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-12 13:37:36,396 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597232256396, current=UP, previous=STARTING]
2020-08-12 13:37:36,398 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-12 13:37:36,398 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-12 13:37:36,423 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-12 13:37:36,424 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-12 13:37:36,425 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-12 13:37:36,467 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-12 13:37:36,488 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'basketItemRepository' defined in pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaMappingContext' while setting bean property 'mappingContext'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaMappingContext': Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing column [date_finalize] in table [orders]
2020-08-12 13:37:36,493 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-08-12 13:37:36,493 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [main] Invocation of destroy method failed on bean with name 'entityManagerFactory': javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing column [date_finalize] in table [orders]
2020-08-12 13:37:36,493 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'taskScheduler'
2020-08-12 13:37:36,494 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-12 13:37:36,494 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2020-08-12 13:37:36,506 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2020-08-12 13:37:36,506 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2020-08-12 13:37:39,511 INFO com.netflix.discovery.DiscoveryClient [main] Unregistering ...
2020-08-12 13:37:39,522 INFO com.netflix.discovery.DiscoveryClient [main] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - deregister  status: 200
2020-08-12 13:37:39,540 INFO com.netflix.discovery.DiscoveryClient [main] Completed shut down of DiscoveryClient
2020-08-12 13:37:39,542 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8082"]
2020-08-12 13:37:39,582 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-08-12 13:37:39,584 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8082"]
2020-08-12 13:37:39,588 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8082"]
2020-08-12 13:37:39,593 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-12 13:37:39,597 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'basketItemRepository' defined in pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaMappingContext' while setting bean property 'mappingContext'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaMappingContext': Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing column [date_finalize] in table [orders]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1699)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1444)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:621)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:609)
	at org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent(DeferredRepositoryInitializationListener.java:51)
	at org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent(DeferredRepositoryInitializationListener.java:36)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:898)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:554)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at pl.com.ttsw.intership.wholesaleserverapp.WholesaleServerAppApplication.main(WholesaleServerAppApplication.java:21)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaMappingContext': Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing column [date_finalize] in table [orders]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	... 28 common frames omitted
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing column [date_finalize] in table [orders]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:403)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing column [date_finalize] in table [orders]
	at org.hibernate.tool.schema.internal.AbstractSchemaValidator.validateTable(AbstractSchemaValidator.java:136)
	at org.hibernate.tool.schema.internal.GroupedSchemaValidatorImpl.validateTables(GroupedSchemaValidatorImpl.java:42)
	at org.hibernate.tool.schema.internal.AbstractSchemaValidator.performValidation(AbstractSchemaValidator.java:89)
	at org.hibernate.tool.schema.internal.AbstractSchemaValidator.doValidation(AbstractSchemaValidator.java:68)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:192)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:469)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	... 4 common frames omitted
2020-08-12 13:40:17,682 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-12 13:40:18,979 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=b76aeffc6abd596148602280de702414e1c693e2, state=null
2020-08-12 13:40:18,980 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-12 13:40:18,986 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-12 13:40:19,665 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-12 13:40:19,666 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-12 13:40:19,827 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-12 13:40:19,869 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 196ms. Found 7 JPA repository interfaces.
2020-08-12 13:40:19,891 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-12 13:40:19,891 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-12 13:40:19,910 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.kafka.repository.PdfInvoiceRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:40:19,910 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.kafka.repository.PdfOrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:40:19,912 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:40:19,913 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:40:19,913 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:40:19,914 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:40:19,914 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:40:19,929 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 38ms. Found 1 MongoDB repository interfaces.
2020-08-12 13:40:20,211 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=47073573-bdde-33a6-82c8-86665d519b49
2020-08-12 13:40:20,473 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1b8aaeab' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-12 13:40:20,483 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-12 13:40:20,744 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-12 13:40:20,753 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-12 13:40:20,753 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-12 13:40:20,753 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-12 13:40:20,897 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-12 13:40:20,897 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1898 ms
2020-08-12 13:40:21,057 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-12 13:40:21,129 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-12 13:40:21,445 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-12 13:40:21,856 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-12 13:40:22,967 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-12 13:40:23,048 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-12 13:40:23,050 ERROR org.springframework.boot.web.embedded.tomcat.TomcatStarter [main] Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through method 'setContentNegotationStrategy' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: Invocation of init method failed; nested exception is liquibase.exception.ValidationFailedException: Validation Failed:
     1 change sets check sum
          db/changelog/version/createTables.xml::5::artur was: 8:bc44177a37471f69984ab0a3baa6e462 but is now: 8:dc73ea65afce61087710f5031e9ef179

2020-08-12 13:40:23,067 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-08-12 13:40:23,069 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-12 13:40:23,070 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-12 13:40:23,071 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-08-12 13:40:23,071 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2020-08-12 13:40:23,083 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2020-08-12 13:40:23,092 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-12 13:40:23,095 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at pl.com.ttsw.intership.wholesaleserverapp.WholesaleServerAppApplication.main(WholesaleServerAppApplication.java:21)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	... 9 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through method 'setContentNegotationStrategy' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: Invocation of init method failed; nested exception is liquibase.exception.ValidationFailedException: Validation Failed:
     1 change sets check sum
          db/changelog/version/createTables.xml::5::artur was: 8:bc44177a37471f69984ab0a3baa6e462 but is now: 8:dc73ea65afce61087710f5031e9ef179

	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:723)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5128)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:421)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:468)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 14 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: Invocation of init method failed; nested exception is liquibase.exception.ValidationFailedException: Validation Failed:
     1 change sets check sum
          db/changelog/version/createTables.xml::5::artur was: 8:bc44177a37471f69984ab0a3baa6e462 but is now: 8:dc73ea65afce61087710f5031e9ef179

	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:723)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:715)
	... 64 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: Invocation of init method failed; nested exception is liquibase.exception.ValidationFailedException: Validation Failed:
     1 change sets check sum
          db/changelog/version/createTables.xml::5::artur was: 8:bc44177a37471f69984ab0a3baa6e462 but is now: 8:dc73ea65afce61087710f5031e9ef179

	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1522)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1486)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1262)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:715)
	... 86 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: Invocation of init method failed; nested exception is liquibase.exception.ValidationFailedException: Validation Failed:
     1 change sets check sum
          db/changelog/version/createTables.xml::5::artur was: 8:bc44177a37471f69984ab0a3baa6e462 but is now: 8:dc73ea65afce61087710f5031e9ef179

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 102 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: Invocation of init method failed; nested exception is liquibase.exception.ValidationFailedException: Validation Failed:
     1 change sets check sum
          db/changelog/version/createTables.xml::5::artur was: 8:bc44177a37471f69984ab0a3baa6e462 but is now: 8:dc73ea65afce61087710f5031e9ef179

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:227)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1172)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:420)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:350)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.findEntityManagerFactory(EntityManagerFactoryUtils.java:121)
	at org.springframework.orm.jpa.EntityManagerFactoryAccessor.setBeanFactory(EntityManagerFactoryAccessor.java:155)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1818)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1783)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 112 common frames omitted
Caused by: liquibase.exception.ValidationFailedException: Validation Failed:
     1 change sets check sum
          db/changelog/version/createTables.xml::5::artur was: 8:bc44177a37471f69984ab0a3baa6e462 but is now: 8:dc73ea65afce61087710f5031e9ef179

	at liquibase.changelog.DatabaseChangeLog.validate(DatabaseChangeLog.java:289)
	at liquibase.Liquibase$1.run(Liquibase.java:202)
	at liquibase.Scope.lambda$child$0(Scope.java:159)
	at liquibase.Scope.child(Scope.java:170)
	at liquibase.Scope.child(Scope.java:158)
	at liquibase.Scope.child(Scope.java:137)
	at liquibase.Liquibase.runInScope(Liquibase.java:1790)
	at liquibase.Liquibase.update(Liquibase.java:183)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:322)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:270)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	... 129 common frames omitted
2020-08-12 13:40:55,344 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-12 13:40:56,527 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=b76aeffc6abd596148602280de702414e1c693e2, state=null
2020-08-12 13:40:56,528 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-12 13:40:56,533 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-12 13:40:57,250 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-12 13:40:57,252 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-12 13:40:57,413 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-12 13:40:57,460 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 201ms. Found 7 JPA repository interfaces.
2020-08-12 13:40:57,481 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-12 13:40:57,481 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-12 13:40:57,499 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.kafka.repository.PdfInvoiceRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:40:57,499 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.kafka.repository.PdfOrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:40:57,501 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:40:57,502 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:40:57,502 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:40:57,503 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:40:57,503 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:40:57,517 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 35ms. Found 1 MongoDB repository interfaces.
2020-08-12 13:40:57,772 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=47073573-bdde-33a6-82c8-86665d519b49
2020-08-12 13:40:57,998 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@c48b543' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-12 13:40:58,010 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-12 13:40:58,268 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-12 13:40:58,276 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-12 13:40:58,277 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-12 13:40:58,277 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-12 13:40:58,423 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-12 13:40:58,424 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1878 ms
2020-08-12 13:40:58,570 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-12 13:40:58,634 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-12 13:40:58,933 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-12 13:40:59,424 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-12 13:41:00,420 INFO liquibase.logging.core.JavaLogger [main] Creating database history table with name: wholesale.databasechangelog
2020-08-12 13:41:00,463 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-12 13:41:00,606 INFO liquibase.logging.core.JavaLogger [main] Table users created
2020-08-12 13:41:00,620 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::1::artur ran successfully in 33ms
2020-08-12 13:41:00,681 INFO liquibase.logging.core.JavaLogger [main] Table roles created
2020-08-12 13:41:00,696 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::2::artur ran successfully in 31ms
2020-08-12 13:41:00,759 INFO liquibase.logging.core.JavaLogger [main] Table users_roles created
2020-08-12 13:41:00,780 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::3::artur ran successfully in 45ms
2020-08-12 13:41:00,848 INFO liquibase.logging.core.JavaLogger [main] Table basket_items created
2020-08-12 13:41:00,870 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::4::artur ran successfully in 46ms
2020-08-12 13:41:00,930 INFO liquibase.logging.core.JavaLogger [main] Table orders created
2020-08-12 13:41:00,944 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::5::artur ran successfully in 32ms
2020-08-12 13:41:00,988 INFO liquibase.logging.core.JavaLogger [main] Table warehouses created
2020-08-12 13:41:01,002 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::6::artur ran successfully in 31ms
2020-08-12 13:41:01,048 INFO liquibase.logging.core.JavaLogger [main] Table invoicepdf created
2020-08-12 13:41:01,065 INFO liquibase.logging.core.JavaLogger [main] Table orderpdf created
2020-08-12 13:41:01,078 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::7::marcin ran successfully in 46ms
2020-08-12 13:41:01,120 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to users_roles (role_id)
2020-08-12 13:41:01,134 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::7::artur ran successfully in 29ms
2020-08-12 13:41:01,177 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to users_roles (user_id)
2020-08-12 13:41:01,192 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::8::artur ran successfully in 30ms
2020-08-12 13:41:01,237 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to orders (warehouse_id)
2020-08-12 13:41:01,252 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::9::artur ran successfully in 30ms
2020-08-12 13:41:01,296 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to basket_items (order_id)
2020-08-12 13:41:01,309 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::10::artur ran successfully in 26ms
2020-08-12 13:41:01,352 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to orders (user_id)
2020-08-12 13:41:01,366 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::11::artur ran successfully in 28ms
2020-08-12 13:41:01,408 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to warehouses (user_id)
2020-08-12 13:41:01,421 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::12::artur ran successfully in 28ms
2020-08-12 13:41:01,463 INFO liquibase.logging.core.JavaLogger [main] New row inserted into roles
2020-08-12 13:41:01,477 INFO liquibase.logging.core.JavaLogger [main] New row inserted into roles
2020-08-12 13:41:01,490 INFO liquibase.logging.core.JavaLogger [main] New row inserted into roles
2020-08-12 13:41:01,504 INFO liquibase.logging.core.JavaLogger [main] New row inserted into roles
2020-08-12 13:41:01,518 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/insertData.xml::13::marcin ran successfully in 70ms
2020-08-12 13:41:01,572 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-12 13:41:01,615 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-12 13:41:01,624 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-12 13:41:01,677 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-12 13:41:01,727 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-12 13:41:01,744 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-12 13:41:01,863 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-12 13:41:01,906 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[192.168.169.68:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-12 13:41:01,974 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-12 13:41:01,986 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f33d54dd64bd542f3eb34db', description='null'}-192.168.169.68:27017] Opened connection [connectionId{localValue:1, serverValue:22}] to 192.168.169.68:27017
2020-08-12 13:41:02,004 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f33d54dd64bd542f3eb34db', description='null'}-192.168.169.68:27017] Monitor thread successfully connected to server with description ServerDescription{address=192.168.169.68:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16026800}
2020-08-12 13:41:02,010 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-12 13:41:02,102 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-12 13:41:03,068 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@706c2726, org.springframework.security.web.context.SecurityContextPersistenceFilter@7c31e01f, org.springframework.security.web.header.HeaderWriterFilter@4144d4a, org.springframework.web.filter.CorsFilter@255482cb, org.springframework.security.web.authentication.logout.LogoutFilter@3a6409ec, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@5f4f6f89, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@442151d1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@397bd46b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@40ecead5, org.springframework.security.web.session.SessionManagementFilter@16257f8c, org.springframework.security.web.access.ExceptionTranslationFilter@30a1b2ad, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@222dc36c]
2020-08-12 13:41:03,089 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-12 13:41:03,089 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-12 13:41:03,095 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-12 13:41:03,095 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-12 13:41:03,149 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-12 13:41:03,159 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-12 13:41:03,546 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-12 13:41:03,604 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-12 13:41:03,669 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-12 13:41:03,753 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-12 13:41:03,753 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-12 13:41:03,881 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-12 13:41:03,881 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-12 13:41:04,035 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-12 13:41:04,079 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-12 13:41:04,079 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-12 13:41:04,079 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-12 13:41:04,080 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-12 13:41:04,080 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-12 13:41:04,080 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-12 13:41:04,080 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-12 13:41:04,176 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-12 13:41:04,178 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-12 13:41:04,181 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-12 13:41:04,183 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597232464183 with initial instances count: 2
2020-08-12 13:41:04,186 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-12 13:41:04,187 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597232464187, current=UP, previous=STARTING]
2020-08-12 13:41:04,188 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-12 13:41:04,189 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-12 13:41:04,212 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-12 13:41:04,213 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-12 13:41:04,214 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-12 13:41:04,258 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-12 13:41:04,665 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-12 13:41:04,675 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 10.238 seconds (JVM running for 10.691)
2020-08-12 13:41:04,931 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:319)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:255)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:178)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy209.save(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.createSuperAdminAfterStartup(CreateAfterAppStart.java:77)
	at pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart.executeAfterAppStartup(CreateAfterAppStart.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:305)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:190)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:153)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.boot.context.event.EventPublishingRunListener.running(EventPublishingRunListener.java:108)
	at org.springframework.boot.SpringApplicationRunListeners.running(SpringApplicationRunListeners.java:77)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at pl.com.ttsw.intership.wholesaleserverapp.WholesaleServerAppApplication.main(WholesaleServerAppApplication.java:21)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: pl.com.ttsw.intership.wholesaleserverapp.rest.domain.entity.Role
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:120)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:113)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:742)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:710)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:525)
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:456)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:419)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:459)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:293)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:718)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:704)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:314)
	at com.sun.proxy.$Proxy199.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 34 common frames omitted
2020-08-12 13:41:04,933 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Unregistering application REST-SERVICE with eureka with status DOWN
2020-08-12 13:41:04,933 WARN com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597232464933, current=DOWN, previous=UP]
2020-08-12 13:41:04,933 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-12 13:41:04,935 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8082"]
2020-08-12 13:41:04,938 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-12 13:41:04,969 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-08-12 13:41:04,971 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.7/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-12 13:41:04,972 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-12 13:41:04,973 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-12 13:41:04,973 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [task-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.7/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.7/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.7/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.7/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.7/java.lang.Thread.run(Thread.java:834)
2020-08-12 13:41:04,974 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8082"]
2020-08-12 13:41:04,977 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8082"]
2020-08-12 13:41:04,982 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-08-12 13:41:04,984 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'taskScheduler'
2020-08-12 13:41:04,984 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-12 13:41:04,984 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2020-08-12 13:41:04,999 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2020-08-12 13:41:04,999 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2020-08-12 13:41:08,001 INFO com.netflix.discovery.DiscoveryClient [main] Unregistering ...
2020-08-12 13:41:08,008 INFO com.netflix.discovery.DiscoveryClient [main] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - deregister  status: 200
2020-08-12 13:41:08,017 INFO com.netflix.discovery.DiscoveryClient [main] Completed shut down of DiscoveryClient
2020-08-12 13:42:47,268 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-12 13:42:48,496 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=b76aeffc6abd596148602280de702414e1c693e2, state=null
2020-08-12 13:42:48,497 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-12 13:42:48,502 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-12 13:42:49,153 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-12 13:42:49,155 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-12 13:42:49,320 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-12 13:42:49,366 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 201ms. Found 7 JPA repository interfaces.
2020-08-12 13:42:49,386 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-12 13:42:49,387 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-12 13:42:49,406 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.kafka.repository.PdfInvoiceRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:42:49,407 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.kafka.repository.PdfOrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:42:49,410 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:42:49,411 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:42:49,411 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:42:49,412 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:42:49,413 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 13:42:49,427 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 40ms. Found 1 MongoDB repository interfaces.
2020-08-12 13:42:49,695 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=47073573-bdde-33a6-82c8-86665d519b49
2020-08-12 13:42:49,925 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@10d18696' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-12 13:42:49,934 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-12 13:42:50,196 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-12 13:42:50,205 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-12 13:42:50,205 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-12 13:42:50,205 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-12 13:42:50,348 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-12 13:42:50,348 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1835 ms
2020-08-12 13:42:50,509 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-12 13:42:50,575 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-12 13:42:50,882 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-12 13:42:51,381 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-12 13:42:52,289 INFO liquibase.logging.core.JavaLogger [main] Creating database history table with name: wholesale.databasechangelog
2020-08-12 13:42:52,332 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-12 13:42:52,438 INFO liquibase.logging.core.JavaLogger [main] Table users created
2020-08-12 13:42:52,454 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::1::artur ran successfully in 35ms
2020-08-12 13:42:52,511 INFO liquibase.logging.core.JavaLogger [main] Table roles created
2020-08-12 13:42:52,525 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::2::artur ran successfully in 29ms
2020-08-12 13:42:52,569 INFO liquibase.logging.core.JavaLogger [main] Table users_roles created
2020-08-12 13:42:52,584 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::3::artur ran successfully in 31ms
2020-08-12 13:42:52,634 INFO liquibase.logging.core.JavaLogger [main] Table basket_items created
2020-08-12 13:42:52,648 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::4::artur ran successfully in 32ms
2020-08-12 13:42:52,707 INFO liquibase.logging.core.JavaLogger [main] Table orders created
2020-08-12 13:42:52,721 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::5::artur ran successfully in 38ms
2020-08-12 13:42:52,766 INFO liquibase.logging.core.JavaLogger [main] Table warehouses created
2020-08-12 13:42:52,781 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::6::artur ran successfully in 32ms
2020-08-12 13:42:52,824 INFO liquibase.logging.core.JavaLogger [main] Table invoicepdf created
2020-08-12 13:42:52,840 INFO liquibase.logging.core.JavaLogger [main] Table orderpdf created
2020-08-12 13:42:52,854 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/createTables.xml::7::marcin ran successfully in 45ms
2020-08-12 13:42:52,897 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to users_roles (role_id)
2020-08-12 13:42:52,911 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::7::artur ran successfully in 30ms
2020-08-12 13:42:52,955 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to users_roles (user_id)
2020-08-12 13:42:52,976 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::8::artur ran successfully in 34ms
2020-08-12 13:42:53,022 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to orders (warehouse_id)
2020-08-12 13:42:53,036 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::9::artur ran successfully in 29ms
2020-08-12 13:42:53,078 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to basket_items (order_id)
2020-08-12 13:42:53,094 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::10::artur ran successfully in 29ms
2020-08-12 13:42:53,140 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to orders (user_id)
2020-08-12 13:42:53,154 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::11::artur ran successfully in 30ms
2020-08-12 13:42:53,203 INFO liquibase.logging.core.JavaLogger [main] Foreign key constraint added to warehouses (user_id)
2020-08-12 13:42:53,218 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/const.xml::12::artur ran successfully in 30ms
2020-08-12 13:42:53,261 INFO liquibase.logging.core.JavaLogger [main] New row inserted into roles
2020-08-12 13:42:53,275 INFO liquibase.logging.core.JavaLogger [main] New row inserted into roles
2020-08-12 13:42:53,289 INFO liquibase.logging.core.JavaLogger [main] New row inserted into roles
2020-08-12 13:42:53,303 INFO liquibase.logging.core.JavaLogger [main] New row inserted into roles
2020-08-12 13:42:53,317 INFO liquibase.logging.core.JavaLogger [main] ChangeSet db/changelog/version/insertData.xml::13::marcin ran successfully in 70ms
2020-08-12 13:42:53,377 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-12 13:42:53,442 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-12 13:42:53,451 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-12 13:42:53,507 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-12 13:42:53,560 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-12 13:42:53,577 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-12 13:42:53,700 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-12 13:42:53,741 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[192.168.169.68:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-12 13:42:53,816 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-12 13:42:53,823 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f33d5bdf89a8229d304e746', description='null'}-192.168.169.68:27017] Opened connection [connectionId{localValue:1, serverValue:23}] to 192.168.169.68:27017
2020-08-12 13:42:53,839 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f33d5bdf89a8229d304e746', description='null'}-192.168.169.68:27017] Monitor thread successfully connected to server with description ServerDescription{address=192.168.169.68:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=15503200}
2020-08-12 13:42:53,845 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-12 13:42:53,938 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-12 13:42:54,829 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@499445d2, org.springframework.security.web.context.SecurityContextPersistenceFilter@118c1faa, org.springframework.security.web.header.HeaderWriterFilter@571903ff, org.springframework.web.filter.CorsFilter@5b58f639, org.springframework.security.web.authentication.logout.LogoutFilter@5ed88e31, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@374ba492, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@99f75e4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c30decf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4d529dbf, org.springframework.security.web.session.SessionManagementFilter@470866d1, org.springframework.security.web.access.ExceptionTranslationFilter@54cce500, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@e60c466]
2020-08-12 13:42:54,849 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-12 13:42:54,850 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-12 13:42:54,855 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-12 13:42:54,855 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-12 13:42:54,955 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-12 13:42:54,963 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-12 13:42:55,311 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-12 13:42:55,371 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-12 13:42:55,436 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-12 13:42:55,517 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-12 13:42:55,518 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-12 13:42:55,640 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-12 13:42:55,640 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-12 13:42:55,792 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-12 13:42:55,836 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-12 13:42:55,836 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-12 13:42:55,836 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-12 13:42:55,837 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-12 13:42:55,837 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-12 13:42:55,837 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-12 13:42:55,837 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-12 13:42:55,931 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-12 13:42:55,933 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-12 13:42:55,935 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-12 13:42:55,938 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597232575937 with initial instances count: 2
2020-08-12 13:42:55,941 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-12 13:42:55,942 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597232575942, current=UP, previous=STARTING]
2020-08-12 13:42:55,943 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-12 13:42:55,943 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-12 13:42:55,968 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-12 13:42:55,968 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-12 13:42:55,969 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-12 13:42:56,016 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-12 13:42:56,435 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-12 13:42:56,444 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 10.052 seconds (JVM running for 10.51)
2020-08-12 13:42:56,743 INFO pl.com.ttsw.intership.wholesaleserverapp.security.task.CreateAfterAppStart [main] Super admin created login: admin@admin.pl , password: DwbyLM9uJR5BM$Y2!CL72j.8EOc>K@5OGo6ros=u
2020-08-12 13:47:55,839 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-12 13:49:13,438 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-12 13:49:13,440 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-2] Initializing Servlet 'dispatcherServlet'
2020-08-12 13:49:13,454 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-2] Completed initialization in 14 ms
2020-08-12 13:49:13,503 ERROR pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationEntryPoint [http-nio-8082-exec-2] Responding with unauthorized error, Message - Full authentication is required to access this resource
2020-08-12 13:52:55,839 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-12 13:57:55,841 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-12 14:00:10,619 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-12 14:00:11,881 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=b76aeffc6abd596148602280de702414e1c693e2, state=null
2020-08-12 14:00:11,882 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-12 14:00:11,888 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-12 14:00:12,546 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-12 14:00:12,548 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-12 14:00:12,708 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-12 14:00:12,754 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 198ms. Found 7 JPA repository interfaces.
2020-08-12 14:00:12,775 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-12 14:00:12,775 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-12 14:00:12,793 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.kafka.repository.PdfInvoiceRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 14:00:12,794 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.kafka.repository.PdfOrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 14:00:12,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 14:00:12,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 14:00:12,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 14:00:12,797 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 14:00:12,797 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 14:00:12,811 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 35ms. Found 1 MongoDB repository interfaces.
2020-08-12 14:00:13,077 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=47073573-bdde-33a6-82c8-86665d519b49
2020-08-12 14:00:13,319 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@73e4387' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-12 14:00:13,328 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-12 14:00:13,597 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-12 14:00:13,607 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-12 14:00:13,607 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-12 14:00:13,607 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-12 14:00:13,750 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-12 14:00:13,751 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1852 ms
2020-08-12 14:00:13,921 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-12 14:00:13,986 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-12 14:00:14,296 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-12 14:00:14,717 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-12 14:00:15,842 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-12 14:00:15,923 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-12 14:00:15,967 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-12 14:00:15,976 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-12 14:00:16,028 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-12 14:00:16,082 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-12 14:00:16,085 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-12 14:00:16,229 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-12 14:00:16,278 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[192.168.169.68:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-12 14:00:16,337 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-12 14:00:16,357 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f33d9d0df78804988ebdeed', description='null'}-192.168.169.68:27017] Opened connection [connectionId{localValue:1, serverValue:24}] to 192.168.169.68:27017
2020-08-12 14:00:16,373 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-12 14:00:16,376 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f33d9d0df78804988ebdeed', description='null'}-192.168.169.68:27017] Monitor thread successfully connected to server with description ServerDescription{address=192.168.169.68:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16459700}
2020-08-12 14:00:16,461 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-12 14:00:17,433 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17d83fe4, org.springframework.security.web.context.SecurityContextPersistenceFilter@66df362c, org.springframework.security.web.header.HeaderWriterFilter@2b6ff016, org.springframework.web.filter.CorsFilter@7d76d72a, org.springframework.security.web.authentication.logout.LogoutFilter@7da9b32c, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@318511f0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3458be63, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@31daf094, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6fd07a56, org.springframework.security.web.session.SessionManagementFilter@c555e1e, org.springframework.security.web.access.ExceptionTranslationFilter@da5b46f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4769e70c]
2020-08-12 14:00:17,448 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-12 14:00:17,448 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-12 14:00:17,455 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-12 14:00:17,455 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-12 14:00:17,473 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-12 14:00:17,482 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-12 14:00:17,909 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-12 14:00:17,981 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-12 14:00:18,047 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-12 14:00:18,129 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-12 14:00:18,129 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-12 14:00:18,253 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-12 14:00:18,253 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-12 14:00:18,411 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-12 14:00:18,460 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-12 14:00:18,460 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-12 14:00:18,460 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-12 14:00:18,460 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-12 14:00:18,461 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-12 14:00:18,461 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-12 14:00:18,461 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-12 14:00:18,560 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-12 14:00:18,562 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-12 14:00:18,565 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-12 14:00:18,568 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597233618567 with initial instances count: 2
2020-08-12 14:00:18,573 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-12 14:00:18,574 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597233618574, current=UP, previous=STARTING]
2020-08-12 14:00:18,576 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-12 14:00:18,576 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-12 14:00:18,600 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-12 14:00:18,601 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-12 14:00:18,602 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-12 14:00:18,646 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-12 14:00:19,069 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-12 14:00:19,079 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.362 seconds (JVM running for 9.814)
2020-08-12 14:00:25,527 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-12 14:00:25,528 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-1] Initializing Servlet 'dispatcherServlet'
2020-08-12 14:00:25,535 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-1] Completed initialization in 7 ms
2020-08-12 14:00:25,566 ERROR pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationEntryPoint [http-nio-8082-exec-1] Responding with unauthorized error, Message - Full authentication is required to access this resource
2020-08-12 14:01:05,337 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-08-12 14:01:06,685 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=wholesale-app, profiles=[dev], label=develop, version=b76aeffc6abd596148602280de702414e1c693e2, state=null
2020-08-12 14:01:06,687 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app-dev.yml'}, BootstrapPropertySource {name='bootstrapProperties-git@gitlab.tt.com.pl:intership2020/config.git/wholesale-services/wholesale-server-app/wholesale-app.yml'}]
2020-08-12 14:01:06,691 INFO org.springframework.boot.SpringApplication [main] The following profiles are active: dev
2020-08-12 14:01:07,360 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-12 14:01:07,362 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-12 14:01:07,519 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data JPA - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.mongo.ProductRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-08-12 14:01:07,565 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 196ms. Found 7 JPA repository interfaces.
2020-08-12 14:01:07,594 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-12 14:01:07,595 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-12 14:01:07,613 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.kafka.repository.PdfInvoiceRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 14:01:07,614 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.kafka.repository.PdfOrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 14:01:07,616 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.BasketItemRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 14:01:07,617 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.OrderRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 14:01:07,617 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.RoleRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 14:01:07,618 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.UserRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 14:01:07,619 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface pl.com.ttsw.intership.wholesaleserverapp.rest.domain.repository.postgres.WarehouseRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-08-12 14:01:07,633 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 38ms. Found 1 MongoDB repository interfaces.
2020-08-12 14:01:07,903 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=47073573-bdde-33a6-82c8-86665d519b49
2020-08-12 14:01:08,142 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7d59e968' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-12 14:01:08,152 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-12 14:01:08,426 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-08-12 14:01:08,435 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-08-12 14:01:08,436 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-08-12 14:01:08,436 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-08-12 14:01:08,568 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-08-12 14:01:08,569 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1869 ms
2020-08-12 14:01:08,725 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-12 14:01:08,795 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2020-08-12 14:01:09,098 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2020-08-12 14:01:09,514 INFO liquibase.logging.core.JavaLogger [main] Successfully acquired change log lock
2020-08-12 14:01:10,624 INFO liquibase.logging.core.JavaLogger [main] Reading from wholesale.databasechangelog
2020-08-12 14:01:10,704 INFO liquibase.logging.core.JavaLogger [main] Successfully released change log lock
2020-08-12 14:01:10,746 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-08-12 14:01:10,755 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'taskScheduler'
2020-08-12 14:01:10,808 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-12 14:01:10,860 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.17.Final
2020-08-12 14:01:10,861 DEBUG org.springframework.web.filter.GenericFilterBean [main] Filter 'jwtAuthenticationFilter' configured for use
2020-08-12 14:01:10,995 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-12 14:01:11,050 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[192.168.169.68:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-12 14:01:11,105 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-08-12 14:01:11,132 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f33da0704235c130927f202', description='null'}-192.168.169.68:27017] Opened connection [connectionId{localValue:1, serverValue:25}] to 192.168.169.68:27017
2020-08-12 14:01:11,148 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='5f33da0704235c130927f202', description='null'}-192.168.169.68:27017] Monitor thread successfully connected to server with description ServerDescription{address=192.168.169.68:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=15069600}
2020-08-12 14:01:11,149 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-12 14:01:11,236 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-12 14:01:12,192 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@68a7f77a, org.springframework.security.web.context.SecurityContextPersistenceFilter@1372696b, org.springframework.security.web.header.HeaderWriterFilter@1728d307, org.springframework.web.filter.CorsFilter@4960b819, org.springframework.security.web.authentication.logout.LogoutFilter@61c4fc34, pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationFilter@7146c6ea, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@206e5183, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@215f8d7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1e987f59, org.springframework.security.web.session.SessionManagementFilter@5ca006ac, org.springframework.security.web.access.ExceptionTranslationFilter@729d1428, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@535aa7c7]
2020-08-12 14:01:12,206 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-12 14:01:12,207 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-12 14:01:12,212 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-08-12 14:01:12,212 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-12 14:01:12,515 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-12 14:01:12,521 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-12 14:01:12,677 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-12 14:01:12,736 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-08-12 14:01:12,800 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-08-12 14:01:12,878 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-08-12 14:01:12,878 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-08-12 14:01:13,017 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-08-12 14:01:13,017 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-08-12 14:01:13,155 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-08-12 14:01:13,202 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-08-12 14:01:13,202 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-08-12 14:01:13,203 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-08-12 14:01:13,203 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-08-12 14:01:13,203 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-08-12 14:01:13,203 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-08-12 14:01:13,203 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-08-12 14:01:13,303 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-08-12 14:01:13,305 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-08-12 14:01:13,307 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-12 14:01:13,310 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1597233673309 with initial instances count: 2
2020-08-12 14:01:13,312 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application REST-SERVICE with eureka with status UP
2020-08-12 14:01:13,313 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1597233673313, current=UP, previous=STARTING]
2020-08-12 14:01:13,314 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082: registering service...
2020-08-12 14:01:13,315 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-08-12 14:01:13,340 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_REST-SERVICE/host.docker.internal:rest-service:8082 - registration status: 204
2020-08-12 14:01:13,340 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8082 (http) with context path ''
2020-08-12 14:01:13,341 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8082
2020-08-12 14:01:13,384 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-08-12 14:01:13,793 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-08-12 14:01:13,803 INFO org.springframework.boot.StartupInfoLogger [main] Started WholesaleServerAppApplication in 9.387 seconds (JVM running for 9.828)
2020-08-12 14:06:13,206 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-12 14:06:39,310 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8082-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-12 14:06:39,310 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-2] Initializing Servlet 'dispatcherServlet'
2020-08-12 14:06:39,318 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8082-exec-2] Completed initialization in 8 ms
2020-08-12 14:11:13,208 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-12 14:16:13,211 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-12 14:21:13,213 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-12 14:26:13,214 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-12 14:31:13,216 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-12 14:36:13,219 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-12 14:40:08,542 ERROR pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationEntryPoint [http-nio-8082-exec-7] Responding with unauthorized error, Message - Full authentication is required to access this resource
2020-08-12 14:41:13,220 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-12 14:46:13,222 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-12 14:51:13,225 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-12 14:56:13,229 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-12 15:01:13,232 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-12 15:03:08,977 ERROR pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationEntryPoint [http-nio-8082-exec-10] Responding with unauthorized error, Message - Full authentication is required to access this resource
2020-08-12 15:06:13,235 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-12 15:11:13,237 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-08-12 15:13:04,418 ERROR pl.com.ttsw.intership.wholesaleserverapp.security.jwt.JwtAuthenticationEntryPoint [http-nio-8082-exec-5] Responding with unauthorized error, Message - Full authentication is required to access this resource
2020-08-12 15:13:25,173 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8082-exec-7] Opened connection [connectionId{localValue:2, serverValue:26}] to 192.168.169.68:27017
